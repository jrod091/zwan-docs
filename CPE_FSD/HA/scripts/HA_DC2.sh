#!/bin/bash
trap "exit 1" TERM
export TOP_PID=$$
IP=$1
PORT=$2

if [ -z "$IP" ] || [ -z "$PORT" ]; then
    echo "Please enter IP and PORT"
    exit 22
fi

COMMON=(-X POST http://$IP:$PORT/graphql -H "Content-Type:application/json")

function execute_cmd(){
    array=("$@")
    str="{\"query\":"\"${array[@]}\""}"
    result=$(curl ${COMMON[@]} -d "${str[@]}" 2> /dev/null)
    if [ $? == 0 ]; then
        echo "${result}" | grep \"success\":false
        if [ $? == 0 ]; then
            echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}]  ${result} 1>&2
            kill -s TERM $TOP_PID
        fi
    else
        echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
        kill -s TERM $TOP_PID
    fi
}

execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH01\", interfaceMode: LAN, aliasName: \"LAN00\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH02\", interfaceMode: WAN, aliasName: \"WAN00\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH03\", interfaceMode: WAN, aliasName: \"WAN01\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'

#ca.crt
execute_cmd 'mutation { importCertificate ( type:CA, cert:\"-----BEGIN CERTIFICATE-----\\nMIIErzCCA5egAwIBAgIUFUpcGpw7JyWH8G7yhnf/mC1RLHMwDQYJKoZIhvcNAQEL\\nBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jv\\nc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFla\\nIENBMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXou\\nY29tMB4XDTIwMDcwMTIxMjA0M1oXDTMwMDYyOTIxMjA0M1owgY4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZ\\nWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdF\\nYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG\\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/XW0aUJzygR6V7TzjeF44VEftRZFxyDZq12\\nMW8U8ZZU52I8Wp0Sz1YvKifGyr1cbE9LEUFDMSjjd/VtADQ6N/+12UfIpIgbS/gp\\nLmD+Oz8XABf7yYTYDY9uyfR7LdNx7elknaWWijs+4CQHi9iPYJ4CGBUWx0YVPKp4\\nDxJ5BUYpF4xbe7tfakZJt43Tgd/jF7zYB/zJMn01EcyLNn/EbN58FOPwADj/v1Qv\\nfJXVWTLxvdbEwcUsCeoUBj0q2ual1HjObJDaEd5RYN6pW6l7URBLpMU3AynwKqfl\\n74dZzJDxjcL+f7JkEMV4IoJhcelCIxlacrlJFuCY9FXz2Ua1twIDAQABo4IBATCB\\n/jAdBgNVHQ4EFgQUAUWiXzO6Gztb5helMMmn0Ro+zvMwgc4GA1UdIwSBxjCBw4AU\\nAUWiXzO6Gztb5helMMmn0Ro+zvOhgZSkgZEwgY4xCzAJBgNVBAYTAlVTMQswCQYD\\nVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UE\\nCxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdFYXN5UlNBMRww\\nGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tghQVSlwanDsnJYfwbvKGd/+YLVEs\\nczAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCLH53Krf8R5SUnPryC\\nQpQ8ClzRNmcVt/iXBy4rDtOFDKvxuUH8YFmkzc2NzJas5s+FBW55jLHmG7s6Kyrz\\n0LB2l16hd9DFLDRQG/XKOETw11o3jfo202Z1Z4Cd15QcZqEeU2y0DexVLWfxGY2e\\npgblrVFSx4GVXBJX+61UDU4T3py0HCBZ5+nw5pVtIC9Q8x43keqnCqAGyFDX0XUP\\nqMmASSfBVpI3Khjx90JJZkWbesKXetO0EPfPes3oTT/fwER1j61/Z5iO1GPahfES\\n3JA8JiaTvLMwNZI5wNEYYegW5a/HsI0qmof4eXS6Lu/GdYokkeS9M6V3TmCRwPZf\\nnixY\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName } } }'

#server2.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCVKHn0gL5x5cV8\\npAmPjcOLKNb/VMc3AA6tJibRuVddU2PzwyfV8NXL65fBu+vvcrB40pyR2wjVzudy\\n60WigA9rXNQJZM9Z5qvjz/xKCQuLIkjuNGkhOzOZZsj2R/OB3Dre22w3L4TaM04T\\nOr+oqvmrpWHMYzYQJbEGJp17cyxSE182xJ/pZNL78G4vXv00JK8wh2DRy12p61Vm\\nSCo8967I8ZqzkRBiZPvS3md84dZDLkJxOabhOm+wFUzNONv5Oz0QH/wJDsHJ5Oh8\\nNHJSha7/lEnWKYhk7zav1CqUfoaQiUkHcR3g3Rm1nZSk6ajYZoX5cp/yySXGq592\\nnd/f1DB7AgMBAAECggEAA7Gf640wqjNtg5uwXOy+1fhp8qLP2C3ZLzKNrY3wevAw\\nvn2rw+GV+dnYxUR5IFHvyt40YGxTOLBKDQ+EhvSy7Q68dYsYk3ph8V9aOR8mOQjd\\nU4DaxaborTjdazP29NVWY+R9NpSnrpusqE9BJdUuH7EVzfD7CsVUL/nO1prQkyu7\\n9vKWTQ5cng9TcRBqM9KfShEd9zI8Lyh6RURewU1Spn1wjxbQncBqBZb5mYxGgiFh\\np4VyQQJH3z2cPVtTIorZO0oqs8fGpTbdlQjAdMVZm9rqI2Yvqd9cW6wzUlqKIKRN\\nnKVbiHlHylTN8lUkiioSfL8O2Yx7/zl0D3uCa4WuWQKBgQDGJ1V/PIyvclXLKFFE\\nBURtGm/4HGZdk8uB9h2YbLdYgKoQMS+pYf0fw/vpzdaWKw3G+V4WS9qin/ZZ+e0+\\nWqZKp16c4ulyiIkPw644UBqdl42yMOMOarEV+w6Q9h1/YKNpI4cztWpZpKYk/mcR\\nnitZnQqswANKDKl/GMirIYS4twKBgQDAs4v0F9cWEFEN6KJD80fe6+mpVFt586Jc\\nY+t5GeZv3VKTGecMX6vgyh0jOHLfLrM1IoIqdW2K5AmUMOZGGUzmFZFDtjzm/t9t\\nenuUx+4VeZv3Vv0e9OA9kODjggJQB+x1ligIeyHzEz0cMDJTMj98rOvgzj6Ya7Ow\\nOpGN23maXQKBgQCLqpPPn+0FiNBB5sQI7rGBOT4sok/gq1io3MGVeyNsBRxZV2Hh\\nwMh6SFhaPpR+ug/27DNOAd8z+w3X85ot9hT5z6iXajTjXqtE6kb1ODjaVUUxkNWp\\nhrgU5yUoNeEqtAHaDImyf69bSfs1Xf9l4pdpjZBFnP10hyI9DEn8nR6AVwKBgEfQ\\nog/N8rKeUhbE4/Q+7kH92Y7piU3hpliYRGFVbbOy39tChADwhrW3nTRLDURvuwnK\\nWohISxK/+XHo52iodSgqUYDSoc/UnJ/ITdYczHXkZGPBX4Px7sADBkzDXulEirMn\\nyrOecACO4u9mZtrqlw53w1B8jIdxW/4JVcVwTdlhAoGAMeS2HhhAkXp4h/QooqxC\\n78YE4uQxgafjaSY7oc1OL6UgNRBDj7RkOP1Gj3rptnkHgHvKd/ZhMvdEYVT/z1es\\nMbXBNt/P0HBmMKA26sTsgIrTCn1pBuiKbBCjsXuXQE6ly1ose96FQ7d2ockn+mJc\\nDSLXwohqTLh2OFfdxxMpXQw=\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFGjCCBAKgAwIBAgIBFzANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjIyMDE0\\nWhcNMzAwNjI5MjIyMDE0WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdzZXJ2ZXIyMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAlSh59IC+ceXFfKQJj43DiyjW/1THNwAOrSYm0blXXVNj88Mn1fDVy+uXwbvr\\n73KweNKckdsI1c7ncutFooAPa1zUCWTPWear48/8SgkLiyJI7jRpITszmWbI9kfz\\ngdw63ttsNy+E2jNOEzq/qKr5q6VhzGM2ECWxBiade3MsUhNfNsSf6WTS+/BuL179\\nNCSvMIdg0ctdqetVZkgqPPeuyPGas5EQYmT70t5nfOHWQy5CcTmm4TpvsBVMzTjb\\n+Ts9EB/8CQ7ByeTofDRyUoWu/5RJ1imIZO82r9QqlH6GkIlJB3Ed4N0ZtZ2UpOmo\\n2GaF+XKf8sklxqufdp3f39QwewIDAQABo4IBfjCCAXowCQYDVR0TBAIwADARBglg\\nhkgBhvhCAQEEBAMCBkAwNAYJYIZIAYb4QgENBCcWJUVhc3ktUlNBIEdlbmVyYXRl\\nZCBTZXJ2ZXIgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFJs02RGUGmRaig6mVjwTfBiX\\n52ZfMIHOBgNVHSMEgcYwgcOAFAFFol8zuhs7W+YXpTDJp9EaPs7zoYGUpIGRMIGO\\nMQswCQYDVQQGEwJVUzELMAkGA1UECBMCR0ExETAPBgNVBAcTCE5vcmNyb3NzMQww\\nCgYDVQQKEwNYWVoxEDAOBgNVBAsTB0NQRVVuaXQxDzANBgNVBAMTBlhZWiBDQTEQ\\nMA4GA1UEKRMHRWFzeVJTQTEcMBoGCSqGSIb3DQEJARYNYWRtaW5AeHl6LmNvbYIU\\nFUpcGpw7JyWH8G7yhnf/mC1RLHMwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0P\\nBAQDAgWgMBIGA1UdEQQLMAmCB3NlcnZlcjIwDQYJKoZIhvcNAQELBQADggEBAGnE\\ng17pobDSvt6p+COhpU8J312MEOXmnO+mR7c1r0GbvZlkmR+jVanpLjbcXEsWWZN4\\nimzmg7EOUqBiaxa6fdyDZGy4VMa9OA5i/czEaXxvrTXXgqDinp6RoR7vlBXjgFfm\\nuKSdxqwa5n9EWsXIcwN5r/pagjtOvcohC0HXPqM0I+oIaeT1vKTMl7cc/2T1fyi8\\nJo2Pa9zDVlvQf9c3xph4hc7u1UzB/73IW3tLV4fW6ybdX4AQEGHdJ1SmjKg5DcXb\\nQ61hxDix/D4algODkwx3W49sFRK6uTElNt1VmeTc+NSNqa4Bz5VxcpqUIrJkJwu8\\nvVbH7CDqrhQKXVTKIcw=\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

#client2.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDcUePTtW/hZZsf\\nrdEVagYPppgOVx0qIAKm8BDAiQbgA3yaHbUdrtB5wv/KXQrZbnXzreGSThPpAC/F\\nPxeNwGIrUiOx2RgjNcV8qYAjTTjPvtA02rLXUXDq/a+QS7cbuFdqOCmT8lQ8V27z\\n7urg98/IrcnvaZ6BeJ958yWDjKNPD3g5mxdEH0AjitjU+3y5pYf2IjS0E1RJBF0G\\nsAmkdLg4Xv8+PvwJ+9LkRxXy0iVJzTdvMi7qLPiqodUZb5+m8O8DacwPUq4wdOu3\\nnz6xmbOuNSurcEm6P+aJ6YPz9HbxK2uivuFoM3TqCkTZnxfWGjhWqmyZF1peT8M5\\nIbzJ94U/AgMBAAECggEAVp6Deeqtb+pokI3f1BF5DJIs2gZ52uP25vcfPvMgltYI\\nGPdxC5h9MkHuGvt1loKNMR69vq2fuk1uepgRhJOMhQeoLPXzPXSYjih9zmM/4L1e\\nUklhYrIMOPdAHPUHqohRJduqzRXK9GZToufdxFDpijZ5W/0kajaoTGPB7fRPCHeL\\nxoLZM/c31PhxWl2doAXj7xgCFxn/eo6zHiwRI2L9H4W+Dd40r/LEQJ8tEI5HWKM+\\n+etPOdPlYF0UeN9BzGcckxF2CNBn3EC2NvUu3bdtW7HUseXPpuDZWKc44nrVQk64\\nVheeq2DqiPXxu6j9tcfl92qtPHRVJzW+eoxI1r7fcQKBgQDvzYVPmAboh9Hq4AZn\\nobgV1+yz1xFbMOmrZZZeNLQ0RefJveVkm2c7vm8Fud9WgKqsXOqU6lRc1q+La+vq\\narflITMNbQpKXPvS8D0Pmd67X157sAAeMae9iTE9c0Kx83rIevjAue0Du378JGlR\\n+PbsMRgfNWjSe+GX7Qvz53ntdQKBgQDrM3xgpvG8DhkVMcDhiAucUIX4Qg023jfE\\nwa1b4Lz0Ey9RwxMfd+KzsFoBAPpcGaWd/z2D+IrSMVst5f2wtT+5uL4OZNtPfchw\\nCU1XQ2JkwOg1vNGzvlIr9/N0zjHXdbZBJI4koA0xtu9UDua2PMgXZUq4TgbIT7Fg\\nXsGi8MLNYwKBgQDqGS5tFzKXShAJRI28GUnGOTZgEjJlXYifw9pZOQY6iYvPjEwm\\nPPc4gZ2Mb3mxzoXPIh33JhMZVpOkfcSe4XOIgTJ/htUm50MHF3PkiQfAz0dDY/uZ\\nfkwMYaPqI10Wr2RL1pCERH02yZEbwMf4OB2FUiAER3V/FWSTldu3TV/gCQKBgDXE\\nkVxvDbgV6PoFY7irJyxW5Cl6wBaY+lrKg90LJWcOs7SXSdnZyEOXvxuXo6RGYKwb\\n22499U5T5io596Lb7HOCnkAgIlqrwJSMK9gVGXs69lrCjZXvnk1a45cCRDajPETs\\nHGqXBC0nStMGjQuAHaXrjAdSHw7P2RbU0qNzMrVNAoGAKj63fJa7Hy/WPVwb2gKR\\nGtNcwDWwC03/wToQrkuNXugDdyJlJ0sU8g9zX4bUvDMgsemFGBOqx3RmLO26Uzym\\neoDA82oSWmLMTML5fw+knd+bo5ONiEY8XNqWDXR7TD476lZPFT3YDDoXBM/zwzsi\\nc73xXu9wL7fFsaCAkCQ9WAE=\\n-----END PRIVATE KEY-----\\n\", cert:\"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBDDANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTQ0\\nWhcNMzAwNjI5MjEyMTQ0WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQyMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEA3FHj07Vv4WWbH63RFWoGD6aYDlcdKiACpvAQwIkG4AN8mh21Ha7QecL/yl0K\\n2W51863hkk4T6QAvxT8XjcBiK1IjsdkYIzXFfKmAI004z77QNNqy11Fw6v2vkEu3\\nG7hXajgpk/JUPFdu8+7q4PfPyK3J72megXifefMlg4yjTw94OZsXRB9AI4rY1Pt8\\nuaWH9iI0tBNUSQRdBrAJpHS4OF7/Pj78CfvS5EcV8tIlSc03bzIu6iz4qqHVGW+f\\npvDvA2nMD1KuMHTrt58+sZmzrjUrq3BJuj/miemD8/R28Stror7haDN06gpE2Z8X\\n1ho4VqpsmRdaXk/DOSG8yfeFPwIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBRg/bJJFqUQb1U5NOwDI/B8dRIzcTCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQy\\nMA0GCSqGSIb3DQEBCwUAA4IBAQBIwzegO4rosLN1x9nEK8ceJ09oms3zm54sOGo3\\nLhlgl3IIkE+e+r7sVIRYNPm+2j0rRwebqCiQuu/De1V0o0iA8XPtLI3hoxnj8FNb\\nN4qFQzuTwm7hp4N5NTmj6rRIz1w7aM0Ebf5rSvuz3hZCu1Ofsp53d5IvPbyrvJAQ\\nNoLyApObjN6IunKM7GRH/CC7xeoZ4jpuGkG+nYC/NVZXNmG3qNE9e4Ck+C5ZqpyH\\nKuSiI4asHzZYfr3b1R+bPhFDmdnDWkYerKpV1URp/a9HPCeQZkz62C1yH+jv5jhX\\nZPepgWPQ+iQaJmMAgrnO6DD/WPvUn5M7Z3Jm651D3WTZ+Tr+\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName }  } }'

#client6.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQC1rV7uUV/pzsOK\\nwX4qlxccD86Qa+HkAA9jZPktluLM3NkOt9EFHspW2C6A40o5rwC1KmscaGrqN5Zo\\nXAo+zFJ9ssQnQ1RUgnUMYrFoHMDFL2g1mLWdliZr34/QAD5xG38Z2t91dgEwPMNM\\nRuhLnwfSceP0wi6+wEfPUAjFgL1z8R31gARQ8UUVmcsSG1u8YZ+xjZ5g44BFYlX6\\nN9WJaqEL645rxkTWkzt6tqe2jOtKvOcPHbQYBQmtSJnsH9QttM7q83H7rLfKw7pI\\nWcnrh1iCdGhG/tPLc6ohnPHffSTkY+rh7zs4dV7uR4VlyaRWMrmr+hJJdHj/TXnr\\n69VoZyAZAgMBAAECggEAAZU4HYVx+3yEsaHL8p0MY38zwoheGHlzqN8JWL9WzIgk\\nD//D/3JsOuN5TEAutl/y9qEe+8lhHRdM5S3gHPn0wgmbsefhRTc5w9jcSNbvSwiF\\ntOnWsz/Kp+fzvdEyuhOOQPBqQAC+M+hjnzeC8J27GLdLUCec9qaAOast2GKtw+PT\\nJ0niNfIUSpjFeAD4Xes8da6tFoRZEqvOkKsHgMZr7Jm9GHf3udciASwawqRLcp4b\\nTmHXEPtcRcVfdmikHRMvw19dRgGIRBkOUYfyEjKulsnffRQmH7kQL5uZCaCv4rrm\\ngsqEvkUhL7witwbKY9Xa8T97cRxzQHE+2s8uwmVQfQKBgQDfz3ZZrvE9C4C9XK1C\\nj+23/+3jmh4Quh2tar54sEbLhU6jFYGAjY0cU3sVeN+iU0jknY4VOx1fcx4q0rdf\\nNwx2Mlo7zEpenfk22ArK3xcYUIxMn6bJcxajeIk1O9Qaxrsw4gD223l6BS0+k2+B\\nXyjrNtuTaw2O5IU0iV5F0lEBNwKBgQDPzph2QQeL/tx/r9pt9XxA8wUoFXuk4zIr\\ntcO1tNvJaSyF64lGY4oAh5N5sjg6qL7qdm1Yjc5xrYwRC+lX8u+0YR2hK+JzWCKm\\nJVFqlb11yMnx+uWfstfpN762QvFwmQwmL+O3O2pttr6dRyQmRWMgAieZ84Wv3nt4\\n60ddj8bRLwKBgQC64j1s/cuqsaQ6etyiLBTQBADcgKCCTybg27VYiblT0GitfRO6\\nCHjAImUwtNHodar0Wyt9RvNr9HBISdOcyha5y6nVLO0cvMSQqy234TkjsH62rMlU\\nhaltrwTDUsX15eQBGXa8qt9wqEnzaqE9YfyFDDWlj0qu+trP17TEkK3bWQKBgF7m\\nYTf34KNtQ3NIcr8ukYzzrpIspWeanenaO0M7Efg8AKoz81/iyz4MrCuyWP1o3K8k\\nYDFFqVa+w61xPCH+/rrocuiMqwCz6jbn6fN76KbmiFrqknzI5tNJst13Wt1p92Nl\\nEWA3URZDk28t8vNLUsZmVYF39cBoIQkKoW+33jrfAoGBANcRD0tneUNaWjxjRzI1\\nLGdjjwYsudxDYeoDwJVhLasukOTIH+IM3DspA0sImpeNFYu0fp9WP2/zUrZ/gmxb\\nO2fzrGEXN30YAgH38k5pJeu4eNvMtMh7wxNEwhnefIAJABSfV/0CzHMnthUkOokG\\nR8A8fSf9kLwGoRzlKqbWWj3R\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBEDANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTUx\\nWhcNMzAwNjI5MjEyMTUxWjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQ2MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAta1e7lFf6c7DisF+KpcXHA/OkGvh5AAPY2T5LZbizNzZDrfRBR7KVtgugONK\\nOa8AtSprHGhq6jeWaFwKPsxSfbLEJ0NUVIJ1DGKxaBzAxS9oNZi1nZYma9+P0AA+\\ncRt/GdrfdXYBMDzDTEboS58H0nHj9MIuvsBHz1AIxYC9c/Ed9YAEUPFFFZnLEhtb\\nvGGfsY2eYOOARWJV+jfViWqhC+uOa8ZE1pM7erantozrSrznDx20GAUJrUiZ7B/U\\nLbTO6vNx+6y3ysO6SFnJ64dYgnRoRv7Ty3OqIZzx330k5GPq4e87OHVe7keFZcmk\\nVjK5q/oSSXR4/0156+vVaGcgGQIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBQPm9QvybovS8+1id+kqhtlroL6mjCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQ2\\nMA0GCSqGSIb3DQEBCwUAA4IBAQCFUCZD4+ECXc7or+U4i4rug8T3wfqEDvFGyKHC\\nmQ6NRoYNN1CfiIqTKFzfraBB+XXoPUwonJmz4RAOvghu00pG3jxDZIiQoaHWaA5+\\nLM2Et2hdmV8nTyj2/Z9xfS0oZYUUiri57gKScSpFWSghDrTq/x3hnTCFjbL74CQS\\nIJE12D65ln6R5Pcexjg8HE1da3eeR3ee1ZmA93MSW/qr/jruycV3+PkLFXOGa2bq\\nVE5Q8LZsuKxPs+r/R5VmBeRaGmbHNVQAQ/gLzDmZxy4U0I8PRCBilQNQPTwDf5VT\\nzZUUa9ruTI6CPjIQor8T6hF9QeJJo7S1UMQsCXqE3g7B4Pwo\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

### Configure public interfaces -----------------------------------------------------
# isp1 static ip
execute_cmd 'mutation{ addIP( name: \"WAN00\", ip: { ipv4: { address: \"10.132.0.7\", netmask:\"255.255.255.0\" } }, gateway:\"10.132.0.99\" ){ code, message, success } }'
# isp2 static ip
execute_cmd 'mutation{ addIP( name: \"WAN01\", ip: { ipv4: { address: \"10.142.0.7\", netmask:\"255.255.255.0\" } }, gateway:\"10.142.0.99\" ){ code, message, success } }'

# nat
execute_cmd 'mutation{ enableNATInterfaces(interfaces: [\"WAN00\", \"WAN01\"]){ code, message, success} }'

#default gateway
execute_cmd 'mutation { setDefaultGateway(viaGateway: \"10.132.0.99\") {code,success,message} }'

# Internet breakout
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET1\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.132.0.99\", localInterface:\"WAN00\", timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET2\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.142.0.99\", localInterface:\"WAN01\", timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer
execute_cmd 'mutation{ saveNetBalancerConfig(configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled,  packetLB: false, type: INTERNET){code, message, success } }'

## Enabled IPForwardng and Syslog
execute_cmd 'mutation{enableDisableIPForwarding(enabled:true){code,message,success}}'
execute_cmd 'mutation{addRemoteLogServerInfo(remoteLogServer:{configuredState:Enabled, remoteServerIP: \"192.168.128.1\", port: 5000, protocol: \"UDP\"}){ code, message, success} }'

# IPFIX for netflow and twamp
execute_cmd 'mutation{ addIPFixCpe(ipFixCpe:{configuredState:Enabled, collectorIP: \"192.168.128.1\", udpPort: 2055, tcpPort: 4739}){code, message, success, ipFixCpe{collectorIP, configuredState, tcpPort, udpPort} } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: netflow){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: twamp){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'

# Set static IP for LAN to reach AMZ_Gateway
execute_cmd 'mutation{ addIP( name: \"LAN00\", ip: { ipv4: { address: \"10.99.0.200\", netmask:\"255.255.255.0\" } }, gateway:\"10.99.0.1\" ){ code, message, success } }'

###IPSEC TUNNEL and Net Balancer

# DC to BR Tunnel: server mode for CPE1 <-> Any
execute_cmd 'mutation{ createIPsec( description: \"DC2 IPSEC over ISP1\", type: ESP, tunnelUUID: \"456ISP1\",left: \"10.132.0.7\", right: \"0.0.0.0\", leftSubnet: \"10.130.67.1/32,172.67.0.0/24\", rightSubnet: \"0.0.0.0/0\" encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: no, authType: X509, leftCert: \"00\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=server2, N=EasyRSA, E=admin@xyz.com\", gateway: \"0001\") { code, success, message } }'
execute_cmd 'mutation{ createIPsec( description: \"DC2 IPSEC over ISP2\", type: ESP, tunnelUUID: \"456ISP2\",left: \"10.142.0.7\", right: \"0.0.0.0\", leftSubnet: \"10.140.67.1/32,172.67.0.0/24\", rightSubnet: \"0.0.0.0/0\", encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: no, authType: X509, leftCert: \"00\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=server2, N=EasyRSA, E=admin@xyz.com\", gateway: \"0002\") { code, success, message } }'

execute_cmd 'mutation{ addIP( name: \"IPSEC00\", twampResponder:true, ip: { ipv4: { address: \"10.130.67.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"IPSEC01\", twampResponder:true, ip: { ipv4: { address: \"10.140.67.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"DC2_BR1_IPSEC\", type: BRANCH, destIP:\"10.130.8.1\", localInterface:\"IPSEC00\", branchLan: \"172.8.0.0/16\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"DC2_BR1_IPSEC\", type: BRANCH, destIP:\"10.140.8.1\", localInterface:\"IPSEC01\", branchLan: \"172.8.0.0/16\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"DC2_BR1_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"DC2_BR2_IPSEC\", type: BRANCH, destIP:\"10.130.9.1\", localInterface:\"IPSEC00\", branchLan: \"172.9.0.0/16\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"DC2_BR2_IPSEC\", type: BRANCH, destIP:\"10.140.9.1\", localInterface:\"IPSEC01\", branchLan: \"172.9.0.0/16\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"DC2_BR2_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'
