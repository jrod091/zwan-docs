#!/bin/bash
trap "exit 1" TERM
export TOP_PID=$$
IP=$1
PORT=$2

if [ -z "$IP" ] || [ -z "$PORT" ]; then
    echo "Please enter IP and PORT"
    exit 22
fi


COMMON=(-X POST http://$IP:$PORT/graphql -H "Content-Type:application/json")

function execute_cmd(){
    array=("$@")
    str="{\"query\":"\"${array[@]}\""}"
    result=$(curl ${COMMON[@]} -d "${str[@]}" 2> /dev/null)
    if [ $? == 0 ]; then
        echo "${result}" | grep \"success\":false
        if [ $? == 0 ]; then
            echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
            kill -s TERM $TOP_PID
        fi
    else
        echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
        kill -s TERM $TOP_PID
    fi
}

execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH01\", interfaceMode: LAN, aliasName: \"LAN00\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH02\", interfaceMode: WAN, aliasName: \"WAN00\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH03\", interfaceMode: WAN, aliasName: \"WAN01\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH04\", interfaceMode: LAN, aliasName: \"LAN01\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'

#ca.crt
execute_cmd 'mutation { importCertificate ( type:CA, cert:\"-----BEGIN CERTIFICATE-----\\nMIIErzCCA5egAwIBAgIUFUpcGpw7JyWH8G7yhnf/mC1RLHMwDQYJKoZIhvcNAQEL\\nBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jv\\nc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFla\\nIENBMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXou\\nY29tMB4XDTIwMDcwMTIxMjA0M1oXDTMwMDYyOTIxMjA0M1owgY4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZ\\nWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdF\\nYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG\\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/XW0aUJzygR6V7TzjeF44VEftRZFxyDZq12\\nMW8U8ZZU52I8Wp0Sz1YvKifGyr1cbE9LEUFDMSjjd/VtADQ6N/+12UfIpIgbS/gp\\nLmD+Oz8XABf7yYTYDY9uyfR7LdNx7elknaWWijs+4CQHi9iPYJ4CGBUWx0YVPKp4\\nDxJ5BUYpF4xbe7tfakZJt43Tgd/jF7zYB/zJMn01EcyLNn/EbN58FOPwADj/v1Qv\\nfJXVWTLxvdbEwcUsCeoUBj0q2ual1HjObJDaEd5RYN6pW6l7URBLpMU3AynwKqfl\\n74dZzJDxjcL+f7JkEMV4IoJhcelCIxlacrlJFuCY9FXz2Ua1twIDAQABo4IBATCB\\n/jAdBgNVHQ4EFgQUAUWiXzO6Gztb5helMMmn0Ro+zvMwgc4GA1UdIwSBxjCBw4AU\\nAUWiXzO6Gztb5helMMmn0Ro+zvOhgZSkgZEwgY4xCzAJBgNVBAYTAlVTMQswCQYD\\nVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UE\\nCxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdFYXN5UlNBMRww\\nGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tghQVSlwanDsnJYfwbvKGd/+YLVEs\\nczAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCLH53Krf8R5SUnPryC\\nQpQ8ClzRNmcVt/iXBy4rDtOFDKvxuUH8YFmkzc2NzJas5s+FBW55jLHmG7s6Kyrz\\n0LB2l16hd9DFLDRQG/XKOETw11o3jfo202Z1Z4Cd15QcZqEeU2y0DexVLWfxGY2e\\npgblrVFSx4GVXBJX+61UDU4T3py0HCBZ5+nw5pVtIC9Q8x43keqnCqAGyFDX0XUP\\nqMmASSfBVpI3Khjx90JJZkWbesKXetO0EPfPes3oTT/fwER1j61/Z5iO1GPahfES\\n3JA8JiaTvLMwNZI5wNEYYegW5a/HsI0qmof4eXS6Lu/GdYokkeS9M6V3TmCRwPZf\\nnixY\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName } } }'

#server4.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCf5N4ibzwRcwfM\\nG3dHavH0cTdQeELmhtlhuW1dVkhhfEQyAY+D8aO8AusH/qBuR3VVKc9phiej09vU\\nPalpXDtB+I/sdPlIp0R500zOY7aFosdGv9rd4eZ+JqMuDf/8VjciwCHNM6msQdLX\\n3PQzL+0HJMnL/DFoxLQhpDxSw25ShtBcyjii3VsSGVbXIij74L3JLRyoBD51BJmD\\ns1Md50fTQRGUATflXLdlP1Y/5QWc4AhEzCXTaecYJQkW350X5b1ieVku4sudT/Z7\\nb2rc5Al7xqHRhHMI62pkldpbqGaszy+iXfomhqJaGcN+PeYpFrsulZhl4qoNaf04\\njQgOJNjjAgMBAAECggEBAJvsrorZ+rPxfzsV1b35lrYP6ic4/9Sa0EYyc2pACBm4\\n+y/gwbmj3U4tclG7h2vDl7JTMYbwYpuqsIdLEnhCjy8IXCH0+FxXcblzy0TBjG7J\\njJd75M3Xy9RdjWgOEwJaeS4UO2JG7UGkdx42xJVeOUFsKLYZ230VxavA42q6Vk12\\ny59YXWrgS4zYTihb2Yt1fZ0lhrGMG4JtVXvw9srX/Fa/21BoekwxhP4BK13gyvy5\\n8Z6XBNsjx2nb4YfIiG/vpRq7qS9riDT2c9kExuh1Z0hBi95bZhfpLIvlVFlJP/W0\\nPH1tHaQe8VA/ZzTBw6t2CMfS9GMuK/Q8h7h4qd6sa4ECgYEA059avwfIJeO0oZ7s\\nXLsv4PF+YGIdwsWzkZRsP2FizwW/aXdCXigpZy7OpaHTNsDLz0RXhHpDn4PzhPA7\\ndpeJuSboelWCoHGtlOlm6IoAEtiGRI7PF5yC/7H8kaMGZDRdSJ2nbCm8PQwnCRiD\\nw35zkCh9xdGGUN1bGMckc+Kd7aECgYEAwWyLtjCldPZc+RaebvLAzQBuaeOPD1q2\\n1JwBuoge5G5hQkWixre2pTCnyTEbkgABe6EcZ4fBrAJygYxyuFIR7JcE+mVB62ox\\nDvwDA34T9b/z1QmTNAr4Q+cfAdO6gtjiPl3ZGE4WKyVcNvKoSukFtKZgIaRlpRnR\\nJEXTYCfREAMCgYA/k6tmosbdozg8KgumnFH5CXRHLpL0VgLppKaUsARIX9iurbaR\\npQ0zQ5uvpRtYYrmYTlbgpP616KV7ddTXfxVQO8EyJ4hz/VMB3tEc4YC+KLDF3gWX\\neVzdxrIzar/b0OOJklufIja8PG9pyySi0dWUJKYMjTMGDkp0+jcYXafGoQKBgB37\\npICec9d4pRrbnb2XFbnxeiwh4ThBGJxGfqIanadNUPhD8SKasc5Th37RhPOR2qj+\\nZXfK/IOccYGRcusNlce19UiXT6udb3NiL1loPtHWaoa4kD/9/1QPTKgs2PmVgySl\\nyZRR7m/Lv8qovNu32XGSZM5yPGtmYBweUtDR+z9fAoGAalKiXP/X01MutA7b5nT0\\nqXA5hEZ59eR9hYJV4JcvtdEVIW1XVG6OWwHH6Fvo4o95Np5njSvG7kvQDrI23qQN\\nk8czZzAt0vI1W2jBOR9sY1nCP3YXJhKa/ZgQP182SgqqXeT8A9JhXoUwP7DRUksc\\nmRFZiFsR5DN/eBkSYexd2i0=\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFGjCCBAKgAwIBAgIBGTANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjIyMDE2\\nWhcNMzAwNjI5MjIyMDE2WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdzZXJ2ZXI0MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAn+TeIm88EXMHzBt3R2rx9HE3UHhC5obZYbltXVZIYXxEMgGPg/GjvALrB/6g\\nbkd1VSnPaYYno9Pb1D2paVw7QfiP7HT5SKdEedNMzmO2haLHRr/a3eHmfiajLg3/\\n/FY3IsAhzTOprEHS19z0My/tByTJy/wxaMS0IaQ8UsNuUobQXMo4ot1bEhlW1yIo\\n++C9yS0cqAQ+dQSZg7NTHedH00ERlAE35Vy3ZT9WP+UFnOAIRMwl02nnGCUJFt+d\\nF+W9YnlZLuLLnU/2e29q3OQJe8ah0YRzCOtqZJXaW6hmrM8vol36JoaiWhnDfj3m\\nKRa7LpWYZeKqDWn9OI0IDiTY4wIDAQABo4IBfjCCAXowCQYDVR0TBAIwADARBglg\\nhkgBhvhCAQEEBAMCBkAwNAYJYIZIAYb4QgENBCcWJUVhc3ktUlNBIEdlbmVyYXRl\\nZCBTZXJ2ZXIgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFErDEnNgyUR2826Addld+XcV\\nspruMIHOBgNVHSMEgcYwgcOAFAFFol8zuhs7W+YXpTDJp9EaPs7zoYGUpIGRMIGO\\nMQswCQYDVQQGEwJVUzELMAkGA1UECBMCR0ExETAPBgNVBAcTCE5vcmNyb3NzMQww\\nCgYDVQQKEwNYWVoxEDAOBgNVBAsTB0NQRVVuaXQxDzANBgNVBAMTBlhZWiBDQTEQ\\nMA4GA1UEKRMHRWFzeVJTQTEcMBoGCSqGSIb3DQEJARYNYWRtaW5AeHl6LmNvbYIU\\nFUpcGpw7JyWH8G7yhnf/mC1RLHMwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0P\\nBAQDAgWgMBIGA1UdEQQLMAmCB3NlcnZlcjQwDQYJKoZIhvcNAQELBQADggEBAEL0\\nXdOEN+tcrDWDFziAe35w7lZR79pc5RTT0CjSurASuPreo+GndH3CWGpwQ1ufq+OY\\nx4EZiIQjlr3l5WNDmGLkS5iMtQ9qqOucZkSr6Q0TcioMqUdpFqV+NbExKNDi6TNd\\nVAhXEwjj2L7f/I3PVhOhZGcvjxxiNLNzYMODfpNv+xNumF2LYhFN+jKSIaux+Ubt\\n9V28m283c7ndLKjIVM3K8NbthOG8c5xwi/R2iT2dVsdagc0mvKUutPZr2hO0n3lS\\nQDgcIkPKxauicWVRRwTQRm5UKTbfl/XZszEfygJNd55ZBAG4Nmyi6SAs6vPTXGg2\\nerRWRo7kRCek9FNT7U0=\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

#client4.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQDCASj8w6IRfjE6\\n6dAdmlu6WptH7OAsgx5lB3J82W2DATlJ5CdSZu8YDW2v07UkpmYICXcUbK+i1lfb\\n7rFltJF2kiuQsAD1QR7ujztDDLARy5Vgpy1af3r2wUnadkUD7JcHtYbERqnJ4o0J\\n4IO3R/YoxcbhtDhtyTDjxdYNqDTYle2TJnwK35FSbVhdvcplxxDLttnXP0/Fi0Ig\\nr03SF/AewBTDVUpiqCxezxaTUVaPcRnbA3aUU7rbIgEuTcu0dNL/obBSQbtn6YeB\\nYziG2N9hI7qAyrQUsb6fVQKll8PjRyqQnKFadmMIH5MHRBaeR8E+uTsL4NRzVtyY\\nnMgbYLPpAgMBAAECggEAchBEjPho3WgYgc7esckDjXmgOpWm6ATfZf8O7SDZJmEd\\n0bf29pfWk4mxp+MNadL7wlXuUW/lhBQJ7CFW47lanSArxRH2Pjxfd1t3OGDJVG0i\\nEoW4QLEbFuFmDq/iu//qfHnaFqSFR1GQIvKB/sysiiReXm2bj9DukbzLsZPoHj5h\\nCGXevs1tF/XPJhDU9ewi8l8e85Enh8lnRx361olh09liiiqyPLUnMSidr7RemWmd\\nzj1YSKr0NzqULy0bNBpCPYrIqgGpBczvSJicWEgqukdpmEtbKIenOUssvLdgQYUM\\nknBHhRhBdcpuuUCdO9GZ5woPOUy2UcTU9B21j4OpQQKBgQD0/oRkShTw8R8jnszA\\nvjsjDT2iZ5gsWpmSWJawEbYImEa5AGEtLQnRieIX9BYopqctGJu2uEkVluKr/L41\\n7zFgymYeWbhrT/DYDck2K11CMfIs3qREcaQkKHR+gO1OU7ZGz4WFyAd8uT65ZnGq\\nrdqZ7nqrgz72cvacU4LUbJNUtQKBgQDKuEBavret0WhPFTSE1t60e/EWyKck8+8C\\nPco0v75ATiO+VRVANo2BuP8S0S3ZjCVSkgRrtW7Ghj3tnjEzRkAVAneQBo193CMs\\nDZRlQ8Y3rU5IMa1WBOJ/9mVhF1MFHVz5Y9Ty4EYW7WaZqdypxuxpS7NDsSj6huEY\\nvwLflXD25QKBgH1oR0a68StAkgr+v5quBcF0hqc6VhfmLJRQCpqIBmEx6YnLmvKw\\nCkWbSgOu6yTV4d9gqFyIyshlWxRkpM0g6mq8UDea/57W5dcCf4vd+LforymusfFj\\nJn1nw/H5dv/QNA7dLWEEumhqvqPSv755jdubymk/Hpyyzm/JA8BO77+9AoGAat7T\\n3oMo5lO9f+OX+mgkpFWq9e32X/7RhAb7MO/c5p3LLi5As8eOtlLG9i6c01GU44Dj\\nH71YlwRyZXC+U1+3rNvOGHm74hxJ1pGaKACg4P1WhazayrxshDVroNHhDJM8TqWY\\nwCoICVJCgsQP9tlODPzBlvAwwFKXHKqmYySvlxkCgYBDPrGiNHMnP1iG3f4sFTDn\\nm2BjKS0eJ/1Ttw6ZuRUlRrawB0pmWv00MHc9shvWgAt42BVoJdBGKd4zoCWJFBBp\\n6t/h7yDZczHGVSTAFBsshlSdG48LoIgKHT6T73GJnuSVsxfGz0NH9ACaFOHxHYGs\\ntshZ/eRD89TY4UelukDimg==\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBDjANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTQ4\\nWhcNMzAwNjI5MjEyMTQ4WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQ0MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAwgEo/MOiEX4xOunQHZpbulqbR+zgLIMeZQdyfNltgwE5SeQnUmbvGA1tr9O1\\nJKZmCAl3FGyvotZX2+6xZbSRdpIrkLAA9UEe7o87QwywEcuVYKctWn969sFJ2nZF\\nA+yXB7WGxEapyeKNCeCDt0f2KMXG4bQ4bckw48XWDag02JXtkyZ8Ct+RUm1YXb3K\\nZccQy7bZ1z9PxYtCIK9N0hfwHsAUw1VKYqgsXs8Wk1FWj3EZ2wN2lFO62yIBLk3L\\ntHTS/6GwUkG7Z+mHgWM4htjfYSO6gMq0FLG+n1UCpZfD40cqkJyhWnZjCB+TB0QW\\nnkfBPrk7C+DUc1bcmJzIG2Cz6QIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBQ8mGHDpm2lqkoTwJ6t/0p3TjftizCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQ0\\nMA0GCSqGSIb3DQEBCwUAA4IBAQA2Xw/fqWbyW3f8WSwbe8/m88Z6eFtWe8a9nErZ\\npVaEy+2dHrGOxsOmMgtqUxs8ja5ELi110PYi3+dAg9hClmwD7mXoZ/Eplu2Q7EoL\\nhWeqJK1NDt1DN0ooGGakgWZKo6JPUtiGoqf15MqoL0tDLQYA4P0P0EoHb5upfQQr\\nU4x8oTwCcAHpWCo/jNb6nDJ/rNjWuyNCMBCr9PFQouboPI+0Ri48e8Bg91A1HKkq\\nVShGa6tt3lIYkstQzAz/YkHSa1hTZ4VGk9iB+yDGRGbGlDPUBljEhrG8V0nSgaHg\\nN8Lm1HVCT4vs8jwqBVnYMM/Ls0ibygpQVAR9DMOEvdVjoMH3\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

#client8.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQC10cXMmr6UJyxt\\nGKO/X17EV/BskXgffAVixjnvR4+/KyxP5GMWbU6hbAcbmgV/ZmKe9yBBM0lXLjv/\\nlPLODizUXYTWb8axkiH03GhYdEDuB9Bve5HuFw9x/vftaj8akg6QJ0TaD9+NAndC\\n49Gx99Ya9E2Iy3rlWEyBOML+8zE0kBFQkrz8s6/rQmVNygvHHD9Fm519n765eqmv\\nQ6ZGycTgFinHcfFGYqxwzJFDK7E48vP13do281bzmKQo2/YuBnsAF8UEsQOyOeYg\\n3ute8VPviNAvcvvwKTOHHjSRhmawRt6T0FFligpGZIYzwI7aVMFIKszSePFCEZxY\\nRg2HR41NAgMBAAECggEASijs396CO1WbFkiFiaoxsi4YP4A6GcVxQO+Pc9yhchz+\\n7vs9u0kMWGUCpSx2b5doRGSSAGYV1PxjtoSfYJKBkIEwjHJ8/bKYLRK1cNbCIRSI\\n3N/vDsjTIPEZWPoMER9f10ZdHAB7cz19PYhE4K0w5D+fXFt6ng8c7VwklO7GtCQa\\nT6K90Xq+M14xYPtWKbpUcEetImeDdLBZGtMX/gB+bVccUvuDyJeKGpu3X/FqugaS\\nfcBvX80523xOzfK/TSxl8mf9kaqZAEEAraLwCQ/PSg8MmSCAHOVNEaE39grAkyUN\\nXTMjNL8tEstIRXSSu+qKrhp1n/GW6w8VVGG3TkoCNQKBgQDtVGH9yhMWrOWssplZ\\nG6vSACjMBJusqsfPE3d6sFLa/MMVdDTDaO5E9xry35WqS2hSaw3gy54xzxqNKHn3\\n0DL5Ows4dLwnGvdarCbC1S0qh8MgNnRYS/P5NL8dz65PIJmkGcPfL5vmC5S2slt1\\nDrSSsqwQL+KHT1Zn6A11zxGo8wKBgQDEH3YszZ+/0+4tbGtdVsPeZbZDrSpcPPT5\\njMT9ReE95eoq73CPuvcX6y6Hwxa+Y2RWb+brWTn8/7wd2ylkS06vDRi7KrLIxxZA\\nk+Burekzqdl8cn7t1HFaFsf/hWqpF708cnpikCj70zmCmI2oN+PO7HsNZxzsNPcO\\nhNvc0RuAvwKBgQDRZ902s3B4V4IoCUZpa5MFroJQ0dgSWHYI7uJDbQUOmGwBqBFO\\nQm3KiEZM+p7yLasU3cTXDpK83EJPPuGvmRMA+eoCnG3QC2kppjBlRPefST8QUzwB\\nFLNmtfXT9gWVZ+xo8Rr0+OsT5jAHrAQqmxkVP3W2qqm0Pnq9H/GQe27XpQKBgDtZ\\nKfG057qs705fmL3OG8eZD+a66C6xY5CAwLvEAb0xbgNAIdfcxBlA2fvLVX6XpS1i\\n/4YIojulR8/hGk13XIAsfmdlLGUFmf5AwZG8nu07YMz/+NkPiJ2ydyMjxHsW6/T2\\nz4I0DbLm4GhcscFN6Godtb8AjQgNnxWNrtrLjH8RAoGACJrrhN2UdxQ2vHza0Jm7\\nYsfmwKNBnJmhZzrssz0MO6NMoTaCAYWDkuJXLyiLmD2zH+mk2sOiIeCJwrlOxsWn\\nREfPPhLdV3d1sSOCBJtGv9nLzltIG91fMgKxReXkxG2/MJ0POlNvgQyAiwpSb4Mp\\n8jLshUfdKmrJXolA3zTW2LY=\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBEjANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTU0\\nWhcNMzAwNjI5MjEyMTU0WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQ4MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAtdHFzJq+lCcsbRijv19exFfwbJF4H3wFYsY570ePvyssT+RjFm1OoWwHG5oF\\nf2ZinvcgQTNJVy47/5Tyzg4s1F2E1m/GsZIh9NxoWHRA7gfQb3uR7hcPcf737Wo/\\nGpIOkCdE2g/fjQJ3QuPRsffWGvRNiMt65VhMgTjC/vMxNJARUJK8/LOv60JlTcoL\\nxxw/RZudfZ++uXqpr0OmRsnE4BYpx3HxRmKscMyRQyuxOPLz9d3aNvNW85ikKNv2\\nLgZ7ABfFBLEDsjnmIN7rXvFT74jQL3L78Ckzhx40kYZmsEbek9BRZYoKRmSGM8CO\\n2lTBSCrM0njxQhGcWEYNh0eNTQIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBRccVRDeB8XyX4P4hPiCUmWMPcAHzCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQ4\\nMA0GCSqGSIb3DQEBCwUAA4IBAQAcAjnuZAKKFICMoNWJ8sEELSMWOsIsrTBW8dwY\\n+ZuPxM4cMqEAuNR4D/f+fTF7mUs67Pw6BhuZiarbAdB6jFt0u+EXAuSGljb+7onm\\nQVZWAJQJxflRrg187JS0B2jfoo+84sOwyG9Vb2KJBMXWeWA/UdoUucR/FIn40pVh\\nFTcpwqsX2h1a4UUmeBIJU56EKtlAQQ3QUcsgsysE/9GiEFQhbqn5CevVP20FT1lW\\neivi1TfrFIprMoXSxf7kDOpa1lHVaQlgYqJ3EM76v8/OULNcad0X9x62AmNOR7cP\\nRsYqk3Ekz/mKuE+iSem9fIA5fkzia0a48tFhOBKd6YbupLiw\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'


### Configure public interfaces -----------------------------------------------------
# WWW static addresses
execute_cmd 'mutation{ addIP( name: \"WAN00\", ip: { ipv4: { address: \"10.132.0.9\", netmask:\"255.255.255.0\" } }, gateway:\"10.132.0.99\" ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"WAN01\", ip: { ipv4: { address: \"10.142.0.9\", netmask:\"255.255.255.0\" } }, gateway:\"10.142.0.99\" ){ code, message, success } }'

# nat
execute_cmd 'mutation{ enableNATInterfaces(interfaces: [\"WAN00\", \"WAN01\"]){ code, message, success} }'

#default gateway
execute_cmd 'mutation { setDefaultGateway(viaGateway: \"10.132.0.99\") {code,success,message} }'

# Internet breakout
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET1\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.132.0.99\", localInterface:\"WAN00\", timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET2\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.142.0.99\", localInterface:\"WAN01\", timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer
execute_cmd 'mutation{ saveNetBalancerConfig(configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB: false, type: INTERNET){code, message, success } }'

## Enabled IPForwardng and Syslog
execute_cmd 'mutation{enableDisableIPForwarding(enabled:true){code,message,success}}'
execute_cmd 'mutation{addRemoteLogServerInfo(remoteLogServer:{configuredState:Enabled, remoteServerIP: \"192.168.128.1\", port: 5000, protocol: \"UDP\"}){ code, message, success} }'

# IPFIX for netflow and twamp
execute_cmd 'mutation{addIPFixCpe(ipFixCpe:{configuredState:Enabled, collectorIP: \"192.168.128.1\", udpPort: 2055, tcpPort: 4739}){code, message, success, ipFixCpe{collectorIP, configuredState, tcpPort, udpPort} } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: netflow){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: twamp){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'

### LAN DHCP -----------------------------------------------------
# set IP for LAN0 port
execute_cmd 'mutation { addIP(name: \"LAN00\", ip: { ipv4: { address: \"172.9.1.1\", netmask: \"255.255.255.0\" } }, status:UP ) {code,success,message} }'
# select network that needs dhcp
execute_cmd 'mutation { createDhcpSubnet(network:\"172.9.1.0\", netmask: \"255.255.255.0\" ) {code,success,message} }'
# define ip range for dhcp
execute_cmd 'mutation { saveDhcpSubnet(subnetId:\"00\", gateway: \"172.9.1.1\", dns: [\"8.8.8.8\"], defaultDuration:{ days:365, hours:0, minutes:0 }, maxDuration:{ days:365, hours:0, minutes:0 }, configuredStatus: true, ipRange: [{start:\"172.9.1.100\", end:\"172.9.1.200\"}]) {code,success,message} }'

# set IP for LAN1 port
execute_cmd 'mutation { addIP(name: \"LAN01\", ip: { ipv4: { address: \"172.9.2.1\", netmask: \"255.255.255.0\" } }, status:UP ) {code,success,message} }'
# select network that needs dhcp
execute_cmd 'mutation { createDhcpSubnet(network:\"172.9.2.0\", netmask: \"255.255.255.0\" ) {code,success,message} }'
# define ip range for dhcp
execute_cmd 'mutation { saveDhcpSubnet(subnetId:\"01\", gateway: \"172.9.2.1\", dns: [\"8.8.8.8\"], defaultDuration:{ days:365, hours:0, minutes:0 }, maxDuration:{ days:365, hours:0, minutes:0 }, configuredStatus: true, ipRange: [{start:\"172.9.2.100\", end:\"172.9.2.200\"}]) {code,success,message} }'

###TUNNEL and Net Balancer
execute_cmd 'mutation{ createIPsec( description: \"BR2 IPSEC over ISP1\", type: ESP, tunnelUUID: \"123ISP1\",left: \"10.132.0.9\", right: \"10.131.0.6\", leftSubnet: \"10.130.9.1/32,172.9.0.0/16\", rightSubnet: \"0.0.0.0/0\" encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: yes, authType: X509, leftCert: \"01\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=client4, N=EasyRSA, E=admin@xyz.com\", gateway: \"0001\") { code, success, message } }'

execute_cmd 'mutation{ createIPsec( description: \"BR2 IPSEC over ISP2\", type: ESP, tunnelUUID: \"123ISP2\",left: \"10.142.0.9\", right: \"10.141.0.6\", leftSubnet: \"10.140.9.1/32,172.9.0.0/16\", rightSubnet: \"0.0.0.0/0\", encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"1h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: yes, authType: X509, leftCert: \"02\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=client8, N=EasyRSA, E=admin@xyz.com\",  gateway: \"0002\") { code, success, message } }'

execute_cmd 'mutation{ addIP( name: \"IPSEC00\", twampResponder:true, ip: { ipv4: { address: \"10.130.9.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"IPSEC01\", twampResponder:true, ip: { ipv4: { address: \"10.140.9.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"BR2_DC_IPSEC\", type: BRANCH, destIP:\"10.130.67.1\", localInterface:\"IPSEC00\", branchLan: \"172.67.0.0/24\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"BR2_DC_IPSEC\", type: BRANCH, destIP:\"10.140.67.1\", localInterface:\"IPSEC01\", branchLan: \"172.67.0.0/24\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"BR2_DC_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'
