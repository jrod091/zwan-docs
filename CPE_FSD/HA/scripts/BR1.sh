#!/bin/bash
trap "exit 1" TERM
export TOP_PID=$$
IP=$1
PORT=$2

if [ -z "$IP" ] || [ -z "$PORT" ]; then
    echo "Please enter IP and PORT"
    exit 22
fi


COMMON=(-X POST http://$IP:$PORT/graphql -H "Content-Type:application/json")

function execute_cmd(){
    array=("$@")
    str="{\"query\":"\"${array[@]}\""}"
    result=$(curl ${COMMON[@]} -d "${str[@]}" 2> /dev/null)
    if [ $? == 0 ]; then
        echo "${result}" | grep \"success\":false
        if [ $? == 0 ]; then
            echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
            kill -s TERM $TOP_PID
        fi
    else
        echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
        kill -s TERM $TOP_PID
    fi
}

execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH01\", interfaceMode: LAN, aliasName: \"LAN00\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH02\", interfaceMode: WAN, aliasName: \"WAN00\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH03\", interfaceMode: WAN, aliasName: \"WAN01\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH04\", interfaceMode: LAN, aliasName: \"LAN01\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'

##ca.crt
execute_cmd 'mutation { importCertificate ( type:CA, cert:\"-----BEGIN CERTIFICATE-----\\nMIIErzCCA5egAwIBAgIUFUpcGpw7JyWH8G7yhnf/mC1RLHMwDQYJKoZIhvcNAQEL\\nBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jv\\nc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFla\\nIENBMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXou\\nY29tMB4XDTIwMDcwMTIxMjA0M1oXDTMwMDYyOTIxMjA0M1owgY4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZ\\nWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdF\\nYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG\\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/XW0aUJzygR6V7TzjeF44VEftRZFxyDZq12\\nMW8U8ZZU52I8Wp0Sz1YvKifGyr1cbE9LEUFDMSjjd/VtADQ6N/+12UfIpIgbS/gp\\nLmD+Oz8XABf7yYTYDY9uyfR7LdNx7elknaWWijs+4CQHi9iPYJ4CGBUWx0YVPKp4\\nDxJ5BUYpF4xbe7tfakZJt43Tgd/jF7zYB/zJMn01EcyLNn/EbN58FOPwADj/v1Qv\\nfJXVWTLxvdbEwcUsCeoUBj0q2ual1HjObJDaEd5RYN6pW6l7URBLpMU3AynwKqfl\\n74dZzJDxjcL+f7JkEMV4IoJhcelCIxlacrlJFuCY9FXz2Ua1twIDAQABo4IBATCB\\n/jAdBgNVHQ4EFgQUAUWiXzO6Gztb5helMMmn0Ro+zvMwgc4GA1UdIwSBxjCBw4AU\\nAUWiXzO6Gztb5helMMmn0Ro+zvOhgZSkgZEwgY4xCzAJBgNVBAYTAlVTMQswCQYD\\nVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UE\\nCxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdFYXN5UlNBMRww\\nGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tghQVSlwanDsnJYfwbvKGd/+YLVEs\\nczAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCLH53Krf8R5SUnPryC\\nQpQ8ClzRNmcVt/iXBy4rDtOFDKvxuUH8YFmkzc2NzJas5s+FBW55jLHmG7s6Kyrz\\n0LB2l16hd9DFLDRQG/XKOETw11o3jfo202Z1Z4Cd15QcZqEeU2y0DexVLWfxGY2e\\npgblrVFSx4GVXBJX+61UDU4T3py0HCBZ5+nw5pVtIC9Q8x43keqnCqAGyFDX0XUP\\nqMmASSfBVpI3Khjx90JJZkWbesKXetO0EPfPes3oTT/fwER1j61/Z5iO1GPahfES\\n3JA8JiaTvLMwNZI5wNEYYegW5a/HsI0qmof4eXS6Lu/GdYokkeS9M6V3TmCRwPZf\\nnixY\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName } } }'

#server3.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQDGxJqLBTyFaRdC\\nmUE+bnHgcN4yYCQ2X0zcb1k7SI54oiZLdKzEVqjvt84cm/K5AnNwuqXN2+UMq+m7\\nwdHy3Ye6owdQbkwRDpMsdoP1KBc5dYSDuTcT7SEmdn6IUKXCP74uxHntKOg5B0Bf\\nLriKcpsf+ZVZNgwN6nPD5/an2Dei+OCgFr9GtL6j4KGS4JaMeVKHoQwbpU0YePAp\\nmAdFwL30V03VeMgcdqDaOpOjxm4rrOmL/xkOl+TO7xwFVvyoPF3HC5m4xKly4HjX\\nHwIXU1JyERZLoZyzuJzxkNkQTlDUJ9llmz5zaK7yths14KqtWmguyFd2TiORxBXe\\n8lYYWopBAgMBAAECggEBAKRLwB5nXqY7vpE7ElXjftdxFAj5tRUIYwTWOSCqkbEe\\n/p5iO6gypYM4H/M/6DqKzxcAAKsPNt3pf9LFm5+vA1D/Dr2p3dA/huE6uUo8MC47\\neCRVRTSATmV3jpFocAsHG1GW791bcdApsUi72qf9oUGl0JAj/4TFJZlqNFR6gUqA\\nDWMQTsWHK+Dw6ATGb9vg+tcyVjpzyJ8xX17HzxvHNYcBp8aODNMXEtDBvCNqg77j\\n25jSI9MxLXWgURmPCFa/0YCVOOfBfWnA9IRyldBptlBh2EMimmFUncX6NBZ4hcKh\\ngk6gfnfHQ4Od3StoScbQQ0Bs6FguVri7xWNTl26XUQECgYEA8u/24zIzfZ25pRLf\\nxvRf6X0WDgrumkqv0n0VMuEwkfbj85hZxIwxBIysuwXRoPX4AwNVmnwcv5YUp74x\\nomeDXLI+8YGcZ/6D0ocld4TjuRqgQVQvdxfrljpOn0Fy/FO5Ya0nljUattAOoEC0\\nE5EPTAPRqvHkdxkQzRPqYGR9oLECgYEA0XSltDIA4sXK/9GqyhKsJtZCxp5m3ZYe\\n560qxlmKiYpc5/WEWzxJMXHLIDPNg/VWtqiUyt98z34iX1MMrM71VRDazvi996t7\\nS4dBpCcT961ThQQY8NOkAr+E+1giCATdibEmwkks1Kx4YSdYd94xGVuCvgQwl26W\\n7drCMbzsZpECgYBqtbMZmux5KfXop4C6EI+srPAqHO0vwsy2RZExNy8xfmQklPAh\\nYH8Lg4s/3090R3a4RBeu8wNhuFe8UtPUhWlzJyx0wrzkBSz8Jbb0Z9/rZ+GqsILk\\n6hHmfBga5hHO+iu81uVDmnHwiTVTePhge+BfQHIxh20WT2FM44mY66svEQKBgDP3\\ngPVIQrgA4vC9kGY6Y8Pu/PpSaqsnh9trN2Wm6ZxeW9ahL4mDV5WQ6hi/QYov4KfJ\\nA8Gh2VGRte14qXhmkK/eUqtvQ5KjVR/UGxEjMO0Ob95cueNmXxbfdZr2rtrWejCj\\nZz5k8V6CvAs+u9BhrETiU3nZiETKB2BUGkJE4VJBAoGAKHasHIXQOMADy1qbwpVN\\nzDVTxAsjmMagIkVyXrixBsU4LbYfw/psQhxGZNKbRJTEa8pdtA2/nTX24YQK0DO7\\nkIpAJOWRMsrZ58c5392/vFeV8Lp7Lv9tX7VkZo0H1EYle/CNKqP3a5NDbV0k9ERz\\nA99Y5CRGt3K6JVclPKA3F5M=\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFGjCCBAKgAwIBAgIBGDANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjIyMDE1\\nWhcNMzAwNjI5MjIyMDE1WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdzZXJ2ZXIzMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAxsSaiwU8hWkXQplBPm5x4HDeMmAkNl9M3G9ZO0iOeKImS3SsxFao77fOHJvy\\nuQJzcLqlzdvlDKvpu8HR8t2HuqMHUG5MEQ6TLHaD9SgXOXWEg7k3E+0hJnZ+iFCl\\nwj++LsR57SjoOQdAXy64inKbH/mVWTYMDepzw+f2p9g3ovjgoBa/RrS+o+ChkuCW\\njHlSh6EMG6VNGHjwKZgHRcC99FdN1XjIHHag2jqTo8ZuK6zpi/8ZDpfkzu8cBVb8\\nqDxdxwuZuMSpcuB41x8CF1NSchEWS6Gcs7ic8ZDZEE5Q1CfZZZs+c2iu8rYbNeCq\\nrVpoLshXdk4jkcQV3vJWGFqKQQIDAQABo4IBfjCCAXowCQYDVR0TBAIwADARBglg\\nhkgBhvhCAQEEBAMCBkAwNAYJYIZIAYb4QgENBCcWJUVhc3ktUlNBIEdlbmVyYXRl\\nZCBTZXJ2ZXIgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFD3mN+xbH8rGB1Ai278TvRVs\\n9KZkMIHOBgNVHSMEgcYwgcOAFAFFol8zuhs7W+YXpTDJp9EaPs7zoYGUpIGRMIGO\\nMQswCQYDVQQGEwJVUzELMAkGA1UECBMCR0ExETAPBgNVBAcTCE5vcmNyb3NzMQww\\nCgYDVQQKEwNYWVoxEDAOBgNVBAsTB0NQRVVuaXQxDzANBgNVBAMTBlhZWiBDQTEQ\\nMA4GA1UEKRMHRWFzeVJTQTEcMBoGCSqGSIb3DQEJARYNYWRtaW5AeHl6LmNvbYIU\\nFUpcGpw7JyWH8G7yhnf/mC1RLHMwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0P\\nBAQDAgWgMBIGA1UdEQQLMAmCB3NlcnZlcjMwDQYJKoZIhvcNAQELBQADggEBAIQI\\ntsDFbU2RtlOCVWNBFl2t85skSA83uqujewY1cGnOBlQzS1cEThw3vc02+clHxLMA\\nnR/bAH7SInJQmF3Eha4YIec/3AbTFGXMTsym69YPbTXikXS0dhKrnAKZlMoz0Lrz\\n/HKInFnz/WhMwVADkdrCF9dk26KM8uKDwKDm2z4a3DxpNfFSOM77yebwIZf95ok2\\nLhRcI9tc36X0lwAfrYpe/tfCZv6sLGxy+GVPIE1RYPA8oUigTy7hk3HaqhmqM6Ta\\nkIY7MmI6nE7VuTAar+sIDjPtU2IWcr7E1R1rCEBfmYFY3QMHrA0RfryA+RQHQQZY\\nZx9kbBjubSpO/G3DIGg=\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

#client3.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCdpNLH+7S+xhZv\\nSme/9iuRl5L9WuY11Q8S2GLZOzWIpMgR6MPXyTzokf0ift7RbN4EAjyleF7qK4zL\\n0EzmJ77dExlO0uH5HNro1WPsj9z/8Gr8+z6Xfr1ke4IC1ZpAaepEJlY7gmeEKTTU\\nQfL82bRDIATpDRIeGPPhtyg/iqRFvip0tdrlrK5Hw3hjmH4EQeZgU7iOwkxSuTo1\\n54+CyYAI8eYOBOiLNQ4B0yB2AQClMyyV8IfWuqtKBJQLqnYKf7HGPXWUk1gy1+TU\\nrR7M5H0tl4abd/xIWHs5/x0pfV2IOlCHeeSUyXz+zsB4Mg6DWV0uYurKhk6DZl0s\\nvMXaIpKPAgMBAAECggEAdu273wdzqmEC198IOnfbErGJQP3sozwjbRI2MLBMiNPX\\n5Dr4VLkK7GIG2JliPBinvdp6KlOPN5a3V6PD//aINXyNITxTIn60X+dsxTEbhzK3\\nZDefVudUtpO+16iSAHpnNBbAA5Ezyy7THjbKvBr5tZJYYgFsY6xrgSOOh7FukPXh\\nIkB/nuqawy2ebDj5zqFyTNU1AXf7M05nh2J4mTCpzDwVApQzX7hQAjw1bFNu0DZU\\nKMUNAmIQ5f0zaf2P09HH4AMkzI6izNfnukIHOT3ivs1TlA1CfHOUCDjPhnZ1cZt6\\n2OMWK2C2iOFFmyffS1ffz6zUsh7zNHS4kXSn9c7zQQKBgQDM0fjOFbExzfG9VAcH\\nJN21L8/y9eQOzKMcjyd5rlMZkAxgvJXeJTsNQszDuepLA43G7gVY8ckAOe3yvveV\\nV59hS4ZpLZkW3hM+oDELqq/5Uy9heG0hJR+hJdpKzkEkvjDTq6a6R4DGg3tAW75r\\njMePRTr1Jaqc8xSCbXItHIJovwKBgQDFCQ2rNtfSxRouKe0fDzed8Ta04Telly97\\njodWO6OLojyS1sv+ELXgAmhL72q1PWCnqBlMNBiubZlCIDIgvaM/yYlNv1g0SSqQ\\n1zP2FGU6S0Ls2ORnKsVdM7FhD1Q5/XfoI/ZL1LBaD3atABSEsql7RpICTcz+AFNx\\npczM2576MQKBgE1/QRHQ+Vur3cTSL1qPo2ez8I2wZhsHaMwcikYrJHwumdBcaqRE\\nGATbepiwFqtNa+6SDunpijEQuiy3/vu9zKtGpVPUkfEqE8QFXqlYav7+b5YEt93r\\nqv0RUngtdE6Pu+/LKemftmTmSNNAI1uUR8m42yb4moaKHv9+o83X1KwHAoGBAIdM\\nIjCxZh367nFIpOSxBFXWLuShyh5Q5HAJfPE/3puhecqy6Dy7qMf7nzaVXka5sMcv\\nbL+g/lm4NIbtqL5GufSxJTFX9O9iVnJC9BFEDAata3VLsfsNqZzIREMLzaBMZqvn\\nFdcYY0hUWf+NkIlWTX6zBMvENMEt5B6j5S++lznhAoGBAK/3EqT9QcVq7uOAIeVB\\njca9lw3vHF71i3LPPqspQh04BGpB7S/3Pvyrre7/R2t7NjugdwOoRkIzoxAwOnJ+\\nWULAvc+7kwxhX5/1G683V9esBDL9a2J7OHsfz+gzIFn4FXLz1bcr3YiMBhcB525c\\nCS1jJQ054l+09ofTyShlnDhX\\n-----END PRIVATE KEY-----\\n\", cert:\"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBDTANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTQ3\\nWhcNMzAwNjI5MjEyMTQ3WjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQzMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAnaTSx/u0vsYWb0pnv/YrkZeS/VrmNdUPEthi2Ts1iKTIEejD18k86JH9In7e\\n0WzeBAI8pXhe6iuMy9BM5ie+3RMZTtLh+Rza6NVj7I/c//Bq/Ps+l369ZHuCAtWa\\nQGnqRCZWO4JnhCk01EHy/Nm0QyAE6Q0SHhjz4bcoP4qkRb4qdLXa5ayuR8N4Y5h+\\nBEHmYFO4jsJMUrk6NeePgsmACPHmDgToizUOAdMgdgEApTMslfCH1rqrSgSUC6p2\\nCn+xxj11lJNYMtfk1K0ezOR9LZeGm3f8SFh7Of8dKX1diDpQh3nklMl8/s7AeDIO\\ng1ldLmLqyoZOg2ZdLLzF2iKSjwIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBTWkWyQsh3opogeScSYothf5SjF4jCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQz\\nMA0GCSqGSIb3DQEBCwUAA4IBAQComiFxKM3Uu1mT3Pd2DIzS4fX/r82dEWTb+Uqo\\nBmgQZpYo4z6muS44Y5dXuRzDOl0yACoTmBf/dr5Wv2DVLFkJ0sXp/5ARpd3t8ee8\\nC676hmqEVEPcs+zZQBGYAghwh7gAKgvlgvKsgovB3pi6BVCrbmzAm1m+aomGRIPv\\nf1TVa+cGGOevlncfwLvKhWgraqP4ZPh6E8OOjarcu+65u5VbpkNcR5Hv8Fvs1Sn7\\nnPHc3aSTEjq3O+2Xvv1ErXgIrcWo8YJmZjHJ+KjHab0fjVTErwrqGFN0Wc+n/fF3\\nYT1qSkZUAoZKg/7cp1k8kJO34m17BuA6iFOCWwy3ocb2uKe8\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName }  } }'

#client7.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDErugYK/vzDC0h\\nTRVvD/1p1AFg0u6yQAo2raBQg+qT1DFOdDKjp299T5u+dMTbpjzj6GFW940NO9bT\\nfP7c22yF6zUwZGXm1F8xKqDHtZGXcwxea8l2861VE5IYbdt1KGJ0OuOPUwx5zqou\\nTXq5dQW2lhY9N+FR3Gz253RAdwNdLOIUGkoyU1CkVpO1yymkNUCiTu9jnOnWpRyC\\ndUiETxz/4LM3lQV52BUzwGr4Q32QPTIiDqm7YLMePttuIUloI2tFq95X6e+3yl/G\\niSVWDAncGHPaEnMv43IyxSeoXsRy9cPYfxALA3CAjxqM9veOewI16tZEF0ep9y1o\\ncP4ZtugTAgMBAAECggEAIufjuv57XXwoukNC7Y4J7HE6uWNWB36EEYYo8IEo7Yl4\\nIrNOlWrOx4+MVXXFxjGvlscUF2oht1qKWshRNwMeNHo021zGFPxV1JT7KdZYe2do\\np407mQfQGEw73mgIzbcYGgalgjc7/JYn78XCZQ2WsPvcAItdSrjzAbK8GADHMQ7J\\nTF+TrTQ4J8LYc2hQFE2Q+BXbSvJIeduUTOJOaTmIoGoHfjbuNa8YP7TZRqdN+0k/\\nCBo3aGD3sL5Wn2jh4N7jXRwxVFcyVwR0LXuS5cctQD+3+ar+1fYOFR3T+Ewxb4Vr\\nUawJ10LY/pbhMUvGIXciKs8L27OCQjcqh7RZVTl/+QKBgQDwyGI+l5S+sB7cdMmL\\nYa3RX2ThqgUSLyu9AkSD87dj8GEB5yErmkhBjIUxTu71sOkAGQTz+WeduyWSxOWp\\n/EvLQydh7yIYhyDENA4QtWFGu6N/ZaYLDaAOUuyTlYFCTnk3GFT+Pjmb76mn3pgT\\nyYTCbogFHjF0hOjsnnxgBu193QKBgQDRHQnElSJVjv4y23qNoPA4C6wyYE6r33d6\\nCOd3sZZLpjW39LoZHe6PVo/ga9fUTPTXK3TSd8S97NZuU3LAdsOzYPkKwlmv1Mv2\\nFE1VyroPAiZJJCzUlCsLw5ZCi5v9cxwmHYYEQdK9Izj1klSaAhQJdYaL+cgGIFYO\\nR0iyBiJ2rwKBgQCAkV70MRg5oe04phugEy4u6BMD9Db0+L8QE4/mLVK1SHtj+rhZ\\nge4nIhNUuuMZybcAWFuusnPDY1Syw/QmChOmm1sCDiBUnILAgVMpVNB2Zmbs9aft\\nqv7V5y1vuJrmfuR2qMVpZGx6eURL4K2vkyESeNakdPTPVNDS1+VtmQVi+QKBgH99\\niLsFgY1QRMKU9T7r5AkHdNCxzsUS1TDdxOFAsDUm/JFO7zbo/Mz/JXDZzxhsYsnc\\ngLjgtF5mysUws0GMJvxyHuPkYfHFdyRsdEnd81m7IcRt/bcNLsFZWX7wxwXa7EqA\\nrXhi+Sy/ELcHo/TRV438zS8B9mVlyZGi/Dstak2ZAoGBAN4LRyv4+qKPTftXnQeD\\n9mZiu5SDTpd9j194JFN2OHiVXRuu+SOkMgucLwWINGcMWXGA8HnXObEPRSlToymK\\nRM7hRMoEHrus9GawBRhn301jIjz68MBVsllRYPWkcA8iAb1i6PiDeGQvB23Tn9Ld\\n11YOvY+ZOU35S7ZoJyNe/T+m\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBETANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTUz\\nWhcNMzAwNjI5MjEyMTUzWjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQ3MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAxK7oGCv78wwtIU0Vbw/9adQBYNLuskAKNq2gUIPqk9QxTnQyo6dvfU+bvnTE\\n26Y84+hhVveNDTvW03z+3Ntshes1MGRl5tRfMSqgx7WRl3MMXmvJdvOtVROSGG3b\\ndShidDrjj1MMec6qLk16uXUFtpYWPTfhUdxs9ud0QHcDXSziFBpKMlNQpFaTtcsp\\npDVAok7vY5zp1qUcgnVIhE8c/+CzN5UFedgVM8Bq+EN9kD0yIg6pu2CzHj7bbiFJ\\naCNrRaveV+nvt8pfxoklVgwJ3Bhz2hJzL+NyMsUnqF7EcvXD2H8QCwNwgI8ajPb3\\njnsCNerWRBdHqfctaHD+GbboEwIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBRoMn6FqkQhUQOacj12aYqd0VSJqzCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQ3\\nMA0GCSqGSIb3DQEBCwUAA4IBAQAactCkVPb27WkTSksQVC8nfESp4NttDRSUwg6I\\nZnwrszYowdMFCQkHXTuxJv30ufG/0dMWXY7XgOTBvR/IwiN4TMmXruG52Npa+k95\\nUDptkyEQfTlCfU2LIfo9V8KdoXmj0J3WIrn354spT5pQAWnZ6WCOuB/vxqO4xyF2\\nrUNzyQtSK601SYomMFdouSVmwTRw3zKXAeMogozddSLFxnO+EsGF3w/ODoNXBvNK\\nmtnoFjkQIXSr3CaxiNhwlWiowgM9drGrbFb4HX0cHlxjXcm4hf6GYOS6JnkqYNbd\\nVPkNOy2sRXquudAnvE/9vcbj2J+Gf2A7hDI0y3QaAef4Ki7K\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'


### Configure public interfaces -----------------------------------------------------
# WWW static addresses
execute_cmd 'mutation{ addIP( name: \"WAN00\", ip: { ipv4: { address: \"10.131.0.8\", netmask:\"255.255.255.0\" } }, gateway:\"10.131.0.99\" ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"WAN01\", ip: { ipv4: { address: \"10.141.0.8\", netmask:\"255.255.255.0\" } }, gateway:\"10.141.0.99\" ){ code, message, success } }'

# nat
execute_cmd 'mutation{ enableNATInterfaces(interfaces: [\"WAN00\", \"WAN01\"]){ code, message, success} }'

#default gateway
execute_cmd 'mutation { setDefaultGateway(viaGateway: \"10.131.0.99\") {code,success,message} }'

###Internet breakout
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET1\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.131.0.99\", localInterface:\"WAN00\", timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET2\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.141.0.99\", localInterface:\"WAN01\", timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer
execute_cmd 'mutation{ saveNetBalancerConfig(configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB: false, type: INTERNET){code, message, success } }'

## Enabled IPForwardng and Syslog
execute_cmd 'mutation{enableDisableIPForwarding(enabled:true){code,message,success}}'
execute_cmd 'mutation{addRemoteLogServerInfo(remoteLogServer:{configuredState:Enabled, remoteServerIP: \"192.168.128.1\", port: 5000, protocol: \"UDP\"}){ code, message, success} }'

###IPFIX for netflow and twamp
execute_cmd 'mutation{ addIPFixCpe(ipFixCpe:{configuredState:Enabled, collectorIP: \"192.168.128.1\", udpPort: 2055, tcpPort: 4739}){code, message, success, ipFixCpe{collectorIP, configuredState, tcpPort, udpPort} } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: netflow){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: twamp){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'

### LAN DHCP -----------------------------------------------------
# set IP for LAN0 port
execute_cmd 'mutation { addIP(name: \"LAN00\", ip: { ipv4: { address: \"172.8.1.1\", netmask: \"255.255.255.0\" } }, status:UP ) {code,success,message} }'
# select network that needs dhcp
execute_cmd 'mutation { createDhcpSubnet(network:\"172.8.1.0\", netmask: \"255.255.255.0\" ) {code,success,message} }'
# define ip range for dhcp
execute_cmd 'mutation { saveDhcpSubnet(subnetId:\"00\", gateway: \"172.8.1.1\", dns: [\"8.8.8.8\"], defaultDuration:{ days:365, hours:0, minutes:0 }, maxDuration:{ days:365, hours:0, minutes:0 }, configuredStatus: true, ipRange: [{start:\"172.8.1.100\", end:\"172.8.1.200\"}]) {code,success,message} }'

# set IP for LAN1 port
execute_cmd 'mutation { addIP(name: \"LAN01\", ip: { ipv4: { address: \"172.8.2.1\", netmask: \"255.255.255.0\" } }, status:UP ) {code,success,message} }'
# select network that needs dhcp
execute_cmd 'mutation { createDhcpSubnet(network:\"172.8.2.0\", netmask: \"255.255.255.0\" ) {code,success,message} }'
# define ip range for dhcp
execute_cmd 'mutation { saveDhcpSubnet(subnetId:\"01\", gateway: \"172.8.2.1\", dns: [\"8.8.8.8\"], defaultDuration:{ days:365, hours:0, minutes:0 }, maxDuration:{ days:365, hours:0, minutes:0 }, configuredStatus: true, ipRange: [{start:\"172.8.2.100\", end:\"172.8.2.200\"}]) {code,success,message} }'

###TUNNEL and Net Balancer
execute_cmd 'mutation{ createIPsec( description: \"BR1 IPSEC over ISP1\", type: ESP, tunnelUUID: \"123ISP1\",left: \"10.131.0.8\", right: \"10.131.0.6\", leftSubnet: \"10.130.8.1/32,172.8.0.0/16\", rightSubnet: \"0.0.0.0/0\" encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: yes, authType: X509, leftCert: \"01\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=client3, N=EasyRSA, E=admin@xyz.com\", gateway: \"0001\") { code, success, message } }'

execute_cmd 'mutation{ createIPsec( description: \"BR1 IPSEC over ISP2\", type: ESP, tunnelUUID: \"123ISP2\",left: \"10.141.0.8\", right: \"10.141.0.6\", leftSubnet: \"10.140.8.1/32,172.8.0.0/16\", rightSubnet: \"0.0.0.0/0\", encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"1h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: yes, authType: X509, leftCert: \"02\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=client7, N=EasyRSA, E=admin@xyz.com\", gateway: \"0002\") { code, success, message } }'

execute_cmd 'mutation{ addIP( name: \"IPSEC00\", twampResponder:true, ip: { ipv4: { address: \"10.130.8.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"IPSEC01\", twampResponder:true, ip: { ipv4: { address: \"10.140.8.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"BR1_DC_IPSEC\", type: BRANCH, destIP:\"10.130.67.1\", localInterface:\"IPSEC00\", branchLan: \"172.67.0.0/24\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"BR1_DC_IPSEC\", type: BRANCH, destIP:\"10.140.67.1\", localInterface:\"IPSEC01\", branchLan: \"172.67.0.0/24\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"BR1_DC_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'
