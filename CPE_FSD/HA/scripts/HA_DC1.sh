#!/bin/bash
trap "exit 1" TERM
export TOP_PID=$$
IP=$1
PORT=$2

if [ -z "$IP" ] || [ -z "$PORT" ]; then
    echo "Please enter IP and PORT"
    exit 22
fi

COMMON=(-X POST http://$IP:$PORT/graphql -H "Content-Type:application/json")

function execute_cmd(){
    array=("$@")
    str="{\"query\":"\"${array[@]}\""}"
    result=$(curl ${COMMON[@]} -d "${str[@]}" 2> /dev/null)
    if [ $? == 0 ]; then
        echo "${result}" | grep \"success\":false
        if [ $? == 0 ]; then
            echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}]  ${result} 1>&2
            kill -s TERM $TOP_PID
        fi
    else
        echo "Failure to execute curl command" [${COMMON[@]}] [${str[@]}] ${result} 1>&2
        kill -s TERM $TOP_PID
    fi
}

execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH01\", interfaceMode: LAN, aliasName: \"LAN00\", additionalDescription: \"DIAB LAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH02\", interfaceMode: WAN, aliasName: \"WAN00\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'
execute_cmd 'mutation { updateInterfaceFromManifest( name: \"ETH03\", interfaceMode: WAN, aliasName: \"WAN01\", additionalDescription: \"DIAB WAN KVM NIC\" ){code, message, success}}'

#ca.crt
execute_cmd 'mutation { importCertificate ( type:CA, cert:\"-----BEGIN CERTIFICATE-----\\nMIIErzCCA5egAwIBAgIUFUpcGpw7JyWH8G7yhnf/mC1RLHMwDQYJKoZIhvcNAQEL\\nBQAwgY4xCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jv\\nc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFla\\nIENBMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXou\\nY29tMB4XDTIwMDcwMTIxMjA0M1oXDTMwMDYyOTIxMjA0M1owgY4xCzAJBgNVBAYT\\nAlVTMQswCQYDVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZ\\nWjEQMA4GA1UECxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdF\\nYXN5UlNBMRwwGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG\\n9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy/XW0aUJzygR6V7TzjeF44VEftRZFxyDZq12\\nMW8U8ZZU52I8Wp0Sz1YvKifGyr1cbE9LEUFDMSjjd/VtADQ6N/+12UfIpIgbS/gp\\nLmD+Oz8XABf7yYTYDY9uyfR7LdNx7elknaWWijs+4CQHi9iPYJ4CGBUWx0YVPKp4\\nDxJ5BUYpF4xbe7tfakZJt43Tgd/jF7zYB/zJMn01EcyLNn/EbN58FOPwADj/v1Qv\\nfJXVWTLxvdbEwcUsCeoUBj0q2ual1HjObJDaEd5RYN6pW6l7URBLpMU3AynwKqfl\\n74dZzJDxjcL+f7JkEMV4IoJhcelCIxlacrlJFuCY9FXz2Ua1twIDAQABo4IBATCB\\n/jAdBgNVHQ4EFgQUAUWiXzO6Gztb5helMMmn0Ro+zvMwgc4GA1UdIwSBxjCBw4AU\\nAUWiXzO6Gztb5helMMmn0Ro+zvOhgZSkgZEwgY4xCzAJBgNVBAYTAlVTMQswCQYD\\nVQQIEwJHQTERMA8GA1UEBxMITm9yY3Jvc3MxDDAKBgNVBAoTA1hZWjEQMA4GA1UE\\nCxMHQ1BFVW5pdDEPMA0GA1UEAxMGWFlaIENBMRAwDgYDVQQpEwdFYXN5UlNBMRww\\nGgYJKoZIhvcNAQkBFg1hZG1pbkB4eXouY29tghQVSlwanDsnJYfwbvKGd/+YLVEs\\nczAMBgNVHRMEBTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQCLH53Krf8R5SUnPryC\\nQpQ8ClzRNmcVt/iXBy4rDtOFDKvxuUH8YFmkzc2NzJas5s+FBW55jLHmG7s6Kyrz\\n0LB2l16hd9DFLDRQG/XKOETw11o3jfo202Z1Z4Cd15QcZqEeU2y0DexVLWfxGY2e\\npgblrVFSx4GVXBJX+61UDU4T3py0HCBZ5+nw5pVtIC9Q8x43keqnCqAGyFDX0XUP\\nqMmASSfBVpI3Khjx90JJZkWbesKXetO0EPfPes3oTT/fwER1j61/Z5iO1GPahfES\\n3JA8JiaTvLMwNZI5wNEYYegW5a/HsI0qmof4eXS6Lu/GdYokkeS9M6V3TmCRwPZf\\nnixY\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName } } }'

#server1.key and cert\"ETH02\", interfaceMode: WAN, aliasName: \"WAN00\",
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCV0XW6B2lXYY56\\n7j/vO609gWbzGvSGvUryTFf5+pDLYKYqVU6aTHCMsRrI1trHbL02xFOz8lLyIjd4\\nGStuFNOvAgt+jna225+P78WSlpcXMSFvh0GAS8gWllYpXRFbk8rW3ZzMN91ZQls4\\nuyKBLUfBULXOIypGRRTR8BD3U5+AzXcJB7mHNDx1dyRTxiUrLnARqi7vlY2pE1Sf\\nlbC+LuHUgL4XdONqJi7m4uyLLOz5qCMei4MVKspPihovG1CV4uKJVEHlTAVP2oLV\\nXwbrP2y1P9Vg/Go1XyMCH5nkrF0mZ3LF65P7MirlifcajrkhJt6lBcy6Bt53+SEE\\nnfIHEG3rAgMBAAECggEAdpWe26q2JOYhQwiGLrRLwd1FQbPaTTRTuEnZcRJ1vaU4\\noVV4rAVJKPOeQc5eyW82rbzkjBCIuwN+aF9z0uRFUccKlhfpu39HY0TkW806tq66\\nym6C2Cwjqk1A0ejKrnPjIAO18qddWyN81QC6pQjUPR3HaezHr2tKuYmNxFa6b9X8\\nE7biVFlbPPsYbILYxTmeOy7cm2S6gty3J8Wu5tAOwlR8hx0LLsTa5cC7UJHHRMBu\\npJqknYMJt95uvzZnxvgCm5VfOVIPUSPl+3sJdZ3MNqIcho9NvCLvE0fnn37xcfR7\\n0oHbPftaTeMU1bnxImnw5PHS0mfN2oaXcugw3o9okQKBgQDE/vtuji7O5mfAwnDg\\nyfGm1yAQtn5mWYCp2s3lFc3dtr7Qokx0fB9co+B/MhlMm9ye8jp9jS/YYzBu9L+F\\ngqetb4ZzN5noCVeUvjtrRsidnvxxNK9E5A6nawLCYMDiUQ0SqyBMKXfMbm4LQDbf\\nF/75Xr3BM4KNl0xXRqCePBeM7QKBgQDCsQj04UFwpYDE9ScWrlmyuxd/ez4wrfbW\\nm+8YRtGG8S2bFYJbqhIu9V0MgZuOzg8CxXlQqVAtRwGQya0ZF1unBez7n5XIu3xK\\ntE4YD7I6Q5C1LGQaIzpMeri0niHHwZz9VwDJlPR+EChLeFvxi2VerAnONiHFmXXP\\n2CWjRdfjNwKBgHdeirzTK0n0E6qaKAwOUn/mm2eFLdKXKX/DNkA6liRjN/z0W5+6\\nFsbsBn0MvofNakJmRUsO4o8ci5ywcd1U7oYJrk7iwj/4aTmYjCjVG3tne1CdvBbi\\nmn6YOXPPbRG2S1WknE2KUy1tPQFUR+unfrlcz17i95kUtQ2tnmZDw4GBAoGAfJIj\\n5fOfGIF9BAjMKvIByJ93KIVlxGX7E1QQxtrBQ/NbN+iqURZfrhYmpFLlgpkL97z8\\no4TCHUZalRbFn9FXPmZHPLTedOKpY288rJ6Wbjs/Av1VS3gQ3FCFkGPBv3t9hIe/\\npDufuG2EKs3nHoUPpmSznXL7ZuCLBiMJ6g9NVD8CgYEAn9xTZdSADjFGfTRU8W2G\\n+KdneQtSy1Oo71iowRnsYPmVMHQqz6ybbzMn5eIcsSEGBtSQyAnJHrL2uyvcptJi\\ngQroHG7e++HQinTnf0cR5Tkqwn69bu9IcWLlfkF/mnFWZSub/2pFyZL8P/8tKVFn\\naZISXgNv/JZ0nqJoIzBRGs0=\\n-----END PRIVATE KEY-----\\n\", cert:\"-----BEGIN CERTIFICATE-----\\nMIIFGjCCBAKgAwIBAgIBFjANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjIyMDEz\\nWhcNMzAwNjI5MjIyMDEzWjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdzZXJ2ZXIxMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAldF1ugdpV2GOeu4/7zutPYFm8xr0hr1K8kxX+fqQy2CmKlVOmkxwjLEayNba\\nx2y9NsRTs/JS8iI3eBkrbhTTrwILfo52ttufj+/FkpaXFzEhb4dBgEvIFpZWKV0R\\nW5PK1t2czDfdWUJbOLsigS1HwVC1ziMqRkUU0fAQ91OfgM13CQe5hzQ8dXckU8Yl\\nKy5wEaou75WNqRNUn5Wwvi7h1IC+F3TjaiYu5uLsiyzs+agjHouDFSrKT4oaLxtQ\\nleLiiVRB5UwFT9qC1V8G6z9stT/VYPxqNV8jAh+Z5KxdJmdyxeuT+zIq5Yn3Go65\\nISbepQXMugbed/khBJ3yBxBt6wIDAQABo4IBfjCCAXowCQYDVR0TBAIwADARBglg\\nhkgBhvhCAQEEBAMCBkAwNAYJYIZIAYb4QgENBCcWJUVhc3ktUlNBIEdlbmVyYXRl\\nZCBTZXJ2ZXIgQ2VydGlmaWNhdGUwHQYDVR0OBBYEFAP8+qvo1bOBunYm12cMaYOj\\nyqq1MIHOBgNVHSMEgcYwgcOAFAFFol8zuhs7W+YXpTDJp9EaPs7zoYGUpIGRMIGO\\nMQswCQYDVQQGEwJVUzELMAkGA1UECBMCR0ExETAPBgNVBAcTCE5vcmNyb3NzMQww\\nCgYDVQQKEwNYWVoxEDAOBgNVBAsTB0NQRVVuaXQxDzANBgNVBAMTBlhZWiBDQTEQ\\nMA4GA1UEKRMHRWFzeVJTQTEcMBoGCSqGSIb3DQEJARYNYWRtaW5AeHl6LmNvbYIU\\nFUpcGpw7JyWH8G7yhnf/mC1RLHMwEwYDVR0lBAwwCgYIKwYBBQUHAwEwCwYDVR0P\\nBAQDAgWgMBIGA1UdEQQLMAmCB3NlcnZlcjEwDQYJKoZIhvcNAQELBQADggEBAFbw\\niJJspJZV4qbVo4pGBMtSAOlzily1IH2bAveNRJCGTLiFtCucPjUAJy9dXQYTFNEg\\n9Gf2DwvfxG0McNhkKOS8OerkFD1Bfr3k5UzM7/AMR8uZfOd8uLZVd67QNFd2LMp2\\njjIBURFu7Upmy9inFELVYu+65IpgV/zshSkZ0ttLt8tkoXJJsbye8cR870QXLgtY\\nJ5vAcfoDfVh49luJ6DHPRvBsrLRagrD4v9GuCxXny3elwlkGFt7OfCVoMIq+CX1X\\nxOtZZ8XfdC+FJ/gNSU2O6R1NiU0Wjm3+c2YE838Glixtdpset6W82QzqFivjxQ5B\\nJT1JmkEtT6LTmB5UxbU=\\n-----END CERTIFICATE-----\\n\" ) { code, success, message, certificate { displayName }  } }'

#client1.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDBtmNcoZ25DH5D\\nfHhF4z6OhwloaPOOv9XlvZYBStagUrtTeQ/vAtTOEfAj1yOjiSq80Q5Mfm9hOFGc\\nWeibfiGKLL5jhoz78V+kt1M/pnB8iwa0BHWoMpbhPU99W4AcW6dVb3pJug+CaxnB\\nfgf8JJVXatdKcWNqGdTGIx1bZ3TZnm+rUd45iFRJku/jzhhP43DmaORiHozU3bZt\\nqNAbXdmJoyErs9EWWMwUdD3Kx7ivB7I8l+hhLkyhe3f2e8YgIBINXGfKAJFL8kue\\npNK+hIAgt/KXuqA3P73VnJTwsS7eXu1F1y8lD/s65xNLFuhsDRC3lI9zL0h1I0dj\\nqyg/yzIBAgMBAAECggEAT0nhR8QbM+gqMmNbM3f9Xgdl0WfL8W0SFzRPlv3T9dGH\\nPXZ7ECC/jA2JlpHz03dMl/aV/LdvzYJo3S9r52FsRwtjbodfY6x7socbOx1cQ44A\\nU2TT5+G1IkKfK7dtK65UQsMbcdwHhyFhbHKywAEVY6+mqaDZyU8DaYpr9MLW8E+T\\nUkmtXZaVkm8lorXZ572hVYSOtV4+bePBx7Hl7l8Wtp5Vf860Ni6gAKTIRIjCD5AG\\nZa47RKEnUwMdZeK3Lf+kGoPSIUihXkIk5DXRzPcVMQ3MAOdZ8uLn2SgRCRjpWjmM\\nnbBDSZv9O5QfLOZdCmoFJg+Z4w/wJiDGztHxPFYM9QKBgQD0+SaHaU240saLwZC1\\nBCsTnXBzIzWNiWLfjGcg4nVCQMPiPijnva5EH3dY7beZcejBKHCFTUh53j3jCFvr\\n5/KDAIz800448poQKOT9y3feYvmFjmgt5TbveH7m1xfVAaBj9praQ8JLTFt7RyhV\\nWABNSOrMFZtozRXl8uXEBtlM6wKBgQDKbo4FQOXmK0tRHYBshzBrOfgp19yVUwlQ\\no5cyQmAXgI6Vm9IzNn41xtkPQvT5oBqBI2EHfdzpBpL7LW8Pvb+Kz7IHGeeBO9Tv\\nAUGwGsn15w6bxeKtKZJxUMvairAlULwke11+sM+mX57zNhYpLZPkRSbqOq3n5rlc\\nmKoim/4RwwKBgQCbxHFDWSoag6vL4eDpuSTK7Ck8jP7YaKt+CgDpYBW/cv8bNPs9\\nn9bXakqxOTatU0j0yYoCuQmEtFQVsJMChhImSotbl+D9RQXBkL9Kwb4OolCXI94K\\nkN1FmBDZJ5v3zXj3Fy+P6dX5myvwT2bOHY7TlbH24yZWlVF/TdvbsZ8q0QKBgQCc\\n7Wlxjybp8MQZZMpq175kUXMdVPbuV4nQFpGeZ7BAZ+ug9UPVabgbjkQ0vY5VeZUy\\naS/N8/duOid1SnpfdJRpUqtLL/y0xaJDifDXSV0pIO7FOXmJDcI10BHIIF1/AABq\\nM6x+Cylea6A4IMS7NVcBzc3mJIkuTkGCE+NIoy8pqwKBgD1PCiNRoVF+dSOdSfW5\\nPvmWWs1B8goi1EB2ujp7P9Hmmr8aY0VqPc+2p+Na6BWhpGbFukCh9DAqRi2nJJWe\\nSysu4tm6B6+SXX9jdoPl0AoU7dgY5gagFaBE9Z7nQ7yZNBdhUZw4Jcd4OmeWy2eX\\nV94oduG0661n0Dng7gU8qE2V\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBCzANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTQy\\nWhcNMzAwNjI5MjEyMTQyWjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQxMRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAwbZjXKGduQx+Q3x4ReM+jocJaGjzjr/V5b2WAUrWoFK7U3kP7wLUzhHwI9cj\\no4kqvNEOTH5vYThRnFnom34hiiy+Y4aM+/FfpLdTP6ZwfIsGtAR1qDKW4T1PfVuA\\nHFunVW96SboPgmsZwX4H/CSVV2rXSnFjahnUxiMdW2d02Z5vq1HeOYhUSZLv484Y\\nT+Nw5mjkYh6M1N22bajQG13ZiaMhK7PRFljMFHQ9yse4rweyPJfoYS5MoXt39nvG\\nICASDVxnygCRS/JLnqTSvoSAILfyl7qgNz+91ZyU8LEu3l7tRdcvJQ/7OucTSxbo\\nbA0Qt5SPcy9IdSNHY6soP8syAQIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBS2q0RCWiSBVY4HbgMYujzYw7kd2DCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQx\\nMA0GCSqGSIb3DQEBCwUAA4IBAQCfCH+inqQPwPkGVgIUPR9qWxVfzEZcnyBZJJSa\\n2ftNsYuLBegRMTNbDrQc45YX6Up3ReOjZM91dtaXifdV3z5/gSOVq6HiIXLTnoZ0\\nbx2Yj3s/EeRW5NDfEU5ulv6VjfTLUNZZhLCge19Nf7NVgI54zNIIqdDWrRVNwZhg\\nOVJSBoLUTkq2s2fivnzTBJMCBNDEpB2jxfpTbHi9XQtZaata2SO0mKP+r6Xj4Dky\\nYBGYF+EwscUXF8jX5tT8r9w1UlZvrGCZ+6RILytvZN+pV9bNERG5+MoIKXRw28sM\\nNXSe7G2H6au89xsJg2sZnw5bhUiaJZbM0Bkl6ZXC7YcvxblA\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

#client5.key and cert
execute_cmd 'mutation { importCertificate ( type:HOST, key:\"-----BEGIN PRIVATE KEY-----\\nMIIEvAIBADANBgkqhkiG9w0BAQEFAASCBKYwggSiAgEAAoIBAQCjQPzj9vjJ4nN8\\nD15aw5mlUsbsLHskoLFA0twfHjFHkCfDbiKQK6om8Lu/+4UwLAcsYJvaNsSa1Oti\\nLI0vJnkgW0ZdAQqSV04YiDpgGZYR4m97+PyQJ+4HJ9EkV/e74ZPtSrmOMH1hB0/R\\nJBMBgr1Gkgxw4itKOZQH70v4Sq7cK0L6kNnWwtD3Jv27vvK6OgUd6CKBIOaYrKHf\\n6hxV5x0VYePINLZSy6HlDEdSHbP1vJxOgNYi4VQuwIG4INl9Pv/MhB7dCy1LxFiu\\nsILr54KIvfK5o7y/VI5Ao6pDpdchfBuZn+416ny2T16C9rWMXkNGhzxRZn+GEpIy\\nxeZmiOvFAgMBAAECggEACW0PLPptkvqIQHmCsSrqDCmjYq+OzKaalWuXWhScM82W\\n/im1xS1APc9Yh9U183oXT/CkDw1qfKYekSSRYk+OXtfmUChnO9vennv/It1XVOEG\\nHtpZetlTXQZnhPmvTCHSMLlHzXXvR1LswN6cWlH6K8DzBvGIHlkEuxCOCmAFiKC/\\nNUZzzCSuxgRrc7nLtrWMLscMXA/4vmYe0WnhEhsT1E5Qw2BNC2sNYytz8LRE4pbY\\nDiTXMoR+0EfIx9UjGYWW1HzkqIOxlgTUGhZU+EKKMOCjcNKRutHU8LD6msIJwmyN\\nzL3niR7M5r7HNGtnfGFWm8meSKSuXNByU3FmJnTCAQKBgQDUbZg9ucnarK1nHi7M\\nNDmaRYuwn2fG8KCesymVBW0WLouohyFDjnvaa9VBEzNElRisMsE9DNykRmpAptB3\\nn36s1YAXsjjCMCqKCx+7dcUHlMpQ490sxfpfpLrxGS2cneofOFeMvxaJTTKi/k/c\\ngc16W0+wzrozH6blKPwqnj9A0QKBgQDEvUxtZGHDO6VUCOl9oG+23Y4Ggiye9G/J\\nS44Gxi7vq7K1dPYxkW4IinoyWFbX6VF+HQp3ksqvlZ/KBhbQXfmrleJk+YvquKnm\\nhrdFHwfLXUykcT4ALzvjv8VSFIGqPvLZp2Q8L3+nQ4TJX6v+8RJ6GB+XQ7CyDKhZ\\n96zw1RSYtQKBgAnKx4LI5qoi3ZdsR8H4AlO/MvJAVttPykemgJsy9dVY7e0l1X20\\nurbV0629Qda+fLWrXUcAKceUy18RkXiCLKew68er2nvxFnTokFzmz99Kl4zlBBQF\\nSEZSZJ+qhnS6vskTos2FHXfUzCnBSVMj1KH4RZMj5Gdo5RuZKQ6Z3taRAoGAWvlx\\n+u+9KUtOgxJv7fCfV/8Rar8NJR/BBWMTtNw13gwWYkRIh9lI+VgXc2pYFhVE4r1J\\nFsvhP9o/fmrcZ9Pc3NQ9URX39j0YC4pl+ueDci2dgDkBQ5KT7hfChdcHspLTN4Rp\\nHE+WhuD46Sl9XjFZqu22xfq+HUcvHhMifGb71DUCgYB+joILtPIlGBmMmokEcn4w\\nGgUOAdK6f37gOJJqdG7GDSpg8WQVi0H8mpmbPqvCrodyz0sol9Q0nmpI3MLmKetA\\nI+4u30o4B7Fpu2lAwT/R46gSYu48FS+3HNSdDyBhwkExIp8g3vKIeG93QNl9/3ol\\n+6fEgirAFFEL/YQn4S7q2A==\\n-----END PRIVATE KEY-----\\n\", cert: \"-----BEGIN CERTIFICATE-----\\nMIIFADCCA+igAwIBAgIBDzANBgkqhkiG9w0BAQsFADCBjjELMAkGA1UEBhMCVVMx\\nCzAJBgNVBAgTAkdBMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAw\\nDgYDVQQLEwdDUEVVbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lS\\nU0ExHDAaBgkqhkiG9w0BCQEWDWFkbWluQHh5ei5jb20wHhcNMjAwNzAxMjEyMTUw\\nWhcNMzAwNjI5MjEyMTUwWjCBjzELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdBMREw\\nDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVVbml0\\nMRAwDgYDVQQDEwdjbGllbnQ1MRAwDgYDVQQpEwdFYXN5UlNBMRwwGgYJKoZIhvcN\\nAQkBFg1hZG1pbkB4eXouY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKC\\nAQEAo0D84/b4yeJzfA9eWsOZpVLG7Cx7JKCxQNLcHx4xR5Anw24ikCuqJvC7v/uF\\nMCwHLGCb2jbEmtTrYiyNLyZ5IFtGXQEKkldOGIg6YBmWEeJve/j8kCfuByfRJFf3\\nu+GT7Uq5jjB9YQdP0SQTAYK9RpIMcOIrSjmUB+9L+Equ3CtC+pDZ1sLQ9yb9u77y\\nujoFHegigSDmmKyh3+ocVecdFWHjyDS2Usuh5QxHUh2z9bycToDWIuFULsCBuCDZ\\nfT7/zIQe3QstS8RYrrCC6+eCiL3yuaO8v1SOQKOqQ6XXIXwbmZ/uNep8tk9egva1\\njF5DRoc8UWZ/hhKSMsXmZojrxQIDAQABo4IBZDCCAWAwCQYDVR0TBAIwADAtBglg\\nhkgBhvhCAQ0EIBYeRWFzeS1SU0EgR2VuZXJhdGVkIENlcnRpZmljYXRlMB0GA1Ud\\nDgQWBBSDpJoKyXlLtDtcTfFVRjyhLN3h9TCBzgYDVR0jBIHGMIHDgBQBRaJfM7ob\\nO1vmF6UwyafRGj7O86GBlKSBkTCBjjELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkdB\\nMREwDwYDVQQHEwhOb3Jjcm9zczEMMAoGA1UEChMDWFlaMRAwDgYDVQQLEwdDUEVV\\nbml0MQ8wDQYDVQQDEwZYWVogQ0ExEDAOBgNVBCkTB0Vhc3lSU0ExHDAaBgkqhkiG\\n9w0BCQEWDWFkbWluQHh5ei5jb22CFBVKXBqcOyclh/Bu8oZ3/5gtUSxzMBMGA1Ud\\nJQQMMAoGCCsGAQUFBwMCMAsGA1UdDwQEAwIHgDASBgNVHREECzAJggdjbGllbnQ1\\nMA0GCSqGSIb3DQEBCwUAA4IBAQDJ74l72F6pRZmfL/4nIoWoYzfySAgsFe+EFSlW\\nX2x117lR37B+MVTX0AOR+y+cXL1TkmtlYZXi7FrEBXzPPXnucicpFfRaBhNH9SHI\\nybGydftUaHUjWUXxTrBym7itsfPQ7W0Mlie8ToKfCK9UymJsCysohCfoIo2NOjdU\\n8Qlf7dohaCGaKS44nh8dsqI7ZbsRtiy96MqaXz/6B/EVMzeuhk10D5h9z/u03D+9\\nqY3SoBf5JUUAYu9bv8McDtsZNuaLzRDYtlGQOuitq6A8WrVWejBp7YgNEXr3K4Et\\nJqfEJ9ozROs8pMREK6S2rCtu0iYjTIk3E803oMxC5oJJPWCD\\n-----END CERTIFICATE-----\\n\") { code, success, message, certificate { displayName }  } }'

### Configure public interfaces -----------------------------------------------------
# isp1 static ip
execute_cmd 'mutation{ addIP( name: \"WAN00\", ip: { ipv4: { address: \"10.131.0.6\", netmask:\"255.255.255.0\" } }, gateway:\"10.131.0.99\" ){ code, message, success } }'
# isp2 static ip
execute_cmd 'mutation{ addIP( name: \"WAN01\", ip: { ipv4: { address: \"10.141.0.6\", netmask:\"255.255.255.0\" } }, gateway:\"10.141.0.99\" ){ code, message, success } }'

# nat
execute_cmd 'mutation{ enableNATInterfaces(interfaces: [\"WAN00\", \"WAN01\"]){ code, message, success} }'

#default gateway
execute_cmd 'mutation { setDefaultGateway(viaGateway: \"10.131.0.99\") {code,success,message} }'

# Internet breakout
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET1\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.131.0.99\", localInterface:\"WAN00\", timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(description:\"INTERNET2\", type : INTERNET, weight:1, configuredStatus:UP, destIP:\"10.141.0.99\", localInterface:\"WAN01\", timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer
execute_cmd 'mutation{ saveNetBalancerConfig(configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled,  packetLB: false, type: INTERNET){code, message, success } }'

## Enabled IPForwardng and Syslog
execute_cmd 'mutation{enableDisableIPForwarding(enabled:true){code,message,success}}'
execute_cmd 'mutation{addRemoteLogServerInfo(remoteLogServer:{configuredState:Enabled, remoteServerIP: \"192.168.128.1\", port: 5000, protocol: \"UDP\"}){ code, message, success} }'

# IPFIX for netflow and twamp
execute_cmd 'mutation{ addIPFixCpe(ipFixCpe:{configuredState:Enabled, collectorIP: \"192.168.128.1\", udpPort: 2055, tcpPort: 4739}){code, message, success, ipFixCpe{collectorIP, configuredState, tcpPort, udpPort} } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: netflow){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'
execute_cmd 'mutation{enableDisableIpfix(configuredState:Enabled, serviceName: twamp){code, message, success, ipfixInfo{configuredState, collectorIP, tcpPort, udpPort } } }'

# Set static IP for LAN to reach AMZ_Gateway
execute_cmd 'mutation{ addIP( name: \"LAN00\", ip: { ipv4: { address: \"10.99.0.100\", netmask:\"255.255.255.0\" } }, gateway:\"10.99.0.1\" ){ code, message, success } }'

###IPSEC TUNNEL and Net Balancer

# DC to BR Tunnel: server mode for CPE1 <-> Any
execute_cmd 'mutation{ createIPsec( description: \"DC1 IPSEC over ISP1\", type: ESP, tunnelUUID: \"123ISP1\",left: \"10.131.0.6\", right: \"0.0.0.0\", leftSubnet: \"10.130.67.1/32,172.67.0.0/24\", rightSubnet: \"0.0.0.0/0\" encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: no, authType: X509, leftCert: \"00\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=server1, N=EasyRSA, E=admin@xyz.com\", gateway: \"0001\") { code, success, message } }'
execute_cmd 'mutation{ createIPsec( description: \"DC1 IPSEC over ISP2\", type: ESP, tunnelUUID: \"123ISP2\",left: \"10.141.0.6\", right: \"0.0.0.0\", leftSubnet: \"10.140.67.1/32,172.67.0.0/24\", rightSubnet: \"0.0.0.0/0\", encrptionAlg: \"aes256\", integrityAlg: \"sha512\", dhGroup: \"modp4096\", lifeTime: \"12h\", ikeVersion: ikev2, ikeEncrptionAlg: \"aes256\", ikeIntegrityAlg: \"sha256\", ikeDHGroup: \"modp3072\", ikeLifetime: \"3h\", dpdDelay: \"30s\", dpdTimeout: \"150s\", dpdAction: restart, compress: no, forceUdpEncaps: no, authType: X509, leftCert: \"00\" leftCertId: \"C=US, ST=GA, L=Norcross, O=XYZ, OU=CPEUnit, CN=server1, N=EasyRSA, E=admin@xyz.com\", gateway: \"0002\") { code, success, message } }'

execute_cmd 'mutation{ addIP( name: \"IPSEC00\", twampResponder:true, ip: { ipv4: { address: \"10.130.67.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'
execute_cmd 'mutation{ addIP( name: \"IPSEC01\", twampResponder:true, ip: { ipv4: { address: \"10.140.67.1\", netmask:\"255.255.0.0\" } } ){ code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"DC1_BR1_IPSEC\", type: BRANCH, destIP:\"10.130.8.1\", localInterface:\"IPSEC00\", branchLan: \"172.8.0.0/16\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"DC1_BR1_IPSEC\", type: BRANCH, destIP:\"10.140.8.1\", localInterface:\"IPSEC01\", branchLan: \"172.8.0.0/16\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"DC1_BR1_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'

execute_cmd 'mutation{ addNBGateway(branchName: \"DC1_BR2_IPSEC\", type: BRANCH, destIP:\"10.130.9.1\", localInterface:\"IPSEC00\", branchLan: \"172.9.0.0/16\", description:\"VIA ISP1 IPSEC00\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'
execute_cmd 'mutation{ addNBGateway(branchName: \"DC1_BR2_IPSEC\", type: BRANCH, destIP:\"10.140.9.1\", localInterface:\"IPSEC01\", branchLan: \"172.9.0.0/16\", description:\"VIA ISP2 IPSEC01\", weight:1, configuredStatus:UP, timeoutCoefficient: 1 ){ code, message, success } }'

# Enable the netbalancer in iptables
execute_cmd 'mutation{ saveNetBalancerConfig(branchName: \"DC1_BR2_IPSEC\", type: BRANCH, configuredStatus: Enabled, mode: LBFO, icmpCheck: Disabled, probesUP:3, probesDOWN:2, icmpReplyTimeout:2, pauseInterval:2, pppdRestart:true, foMonitorEnabledIP1: Disabled, foMonitorEnabledIP2: Disabled, foMonitorEnabledIP3: Disabled, packetLB:true){code, message, success } }'
